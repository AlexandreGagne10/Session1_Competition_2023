

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Apr 30 14:46:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.35
    43                           ; Generated 05/05/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F25K80 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     _RCREG1	set	4014
    78   000000                     _TXREG1	set	4013
    79   000000                     _SPBRG1	set	4015
    80   000000                     _TXSTA1	set	4012
    81                           
    82                           	psect	nvCOMRAM
    83   00002F                     __pnvCOMRAM:
    84                           	callstack 0
    85   00002F                     _EUSART1_ErrorHandler:
    86                           	callstack 0
    87   00002F                     	ds	2
    88   000031                     _EUSART1_OverrunErrorHandler:
    89                           	callstack 0
    90   000031                     	ds	2
    91   000033                     _EUSART1_FramingErrorHandler:
    92                           	callstack 0
    93   000033                     	ds	2
    94   000035                     _EUSART1_RxDefaultInterruptHandler:
    95                           	callstack 0
    96   000035                     	ds	2
    97   000037                     _EUSART1_TxDefaultInterruptHandler:
    98                           	callstack 0
    99   000037                     	ds	2
   100   000039                     _eusart1TxBufferRemaining:
   101                           	callstack 0
   102   000039                     	ds	1
   103   000000                     _LATCbits	set	3979
   104   000000                     _LATBbits	set	3978
   105   000000                     _LATAbits	set	3977
   106   000000                     _RCSTA1bits	set	4011
   107   000000                     _TXSTA1bits	set	4012
   108   000000                     _WPUB	set	3931
   109   000000                     _ANCON1	set	3932
   110   000000                     _ANCON0	set	3933
   111   000000                     _LATA	set	3977
   112   000000                     _TRISA	set	3986
   113   000000                     _LATC	set	3979
   114   000000                     _LATB	set	3978
   115   000000                     _REFOCON	set	3994
   116   000000                     _OSCTUNE	set	3995
   117   000000                     _PIE1bits	set	3997
   118   000000                     _INTCON2bits	set	4081
   119   000000                     _TRISC	set	3988
   120   000000                     _TRISB	set	3987
   121   000000                     _SPBRGH1	set	3965
   122   000000                     _INTCONbits	set	4082
   123   000000                     _PIR1bits	set	3998
   124   000000                     _BAUDCON1	set	4007
   125   000000                     _RCSTA1	set	4011
   126   000000                     _RCONbits	set	4048
   127   000000                     _OSCCON2	set	4050
   128   000000                     _OSCCON	set	4051
   129   000000                     _PORTBbits	set	3969
   130                           
   131                           ; #config settings
   132                           
   133                           	psect	cinit
   134   000A4C                     __pcinit:
   135                           	callstack 0
   136   000A4C                     start_initialization:
   137                           	callstack 0
   138   000A4C                     __initialization:
   139                           	callstack 0
   140                           
   141                           ; Clear objects allocated to COMRAM (32 bytes)
   142   000A4C  EE00  F001         	lfsr	0,__pbssCOMRAM
   143   000A50  0E20               	movlw	32
   144   000A52                     clear_0:
   145   000A52  6AEE               	clrf	postinc0,c
   146   000A54  06E8               	decf	wreg,f,c
   147   000A56  E1FD               	bnz	clear_0
   148   000A58                     end_of_initialization:
   149                           	callstack 0
   150   000A58                     __end_of__initialization:
   151                           	callstack 0
   152   000A58  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   153   000A5A  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   154   000A5C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155   000A5E  6EF8               	movwf	tblptru,c
   156   000A60  0100               	movlb	0
   157   000A62  EF07  F001         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   000001                     __pbssCOMRAM:
   161                           	callstack 0
   162   000001                     _eusart1RxStatusBuffer:
   163                           	callstack 0
   164   000001                     	ds	8
   165   000009                     _eusart1RxBuffer:
   166                           	callstack 0
   167   000009                     	ds	8
   168   000011                     _eusart1TxBuffer:
   169                           	callstack 0
   170   000011                     	ds	8
   171   000019                     main@x:
   172                           	callstack 0
   173   000019                     	ds	2
   174   00001B                     _eusart1RxLastError:
   175                           	callstack 0
   176   00001B                     	ds	1
   177   00001C                     _eusart1RxCount:
   178                           	callstack 0
   179   00001C                     	ds	1
   180   00001D                     _eusart1RxTail:
   181                           	callstack 0
   182   00001D                     	ds	1
   183   00001E                     _eusart1RxHead:
   184                           	callstack 0
   185   00001E                     	ds	1
   186   00001F                     _eusart1TxTail:
   187                           	callstack 0
   188   00001F                     	ds	1
   189   000020                     _eusart1TxHead:
   190                           	callstack 0
   191   000020                     	ds	1
   192                           
   193                           	psect	cstackCOMRAM
   194   000021                     __pcstackCOMRAM:
   195                           	callstack 0
   196   000021                     ??_INTERRUPT_InterruptManager:
   197   000021                     
   198                           ; 1 bytes @ 0x0
   199   000021                     	ds	4
   200   000025                     ?_input:
   201                           	callstack 0
   202   000025                     EUSART1_SetFramingErrorHandler@interruptHandler:
   203                           	callstack 0
   204   000025                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   205                           	callstack 0
   206   000025                     EUSART1_SetErrorHandler@interruptHandler:
   207                           	callstack 0
   208   000025                     EUSART1_SetTxInterruptHandler@interruptHandler:
   209                           	callstack 0
   210   000025                     EUSART1_SetRxInterruptHandler@interruptHandler:
   211                           	callstack 0
   212   000025                     output_high@pin:
   213                           	callstack 0
   214   000025                     output_low@pin:
   215                           	callstack 0
   216   000025                     input@pin:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x4
   220   000025                     	ds	2
   221   000027                     ??_input:
   222   000027                     ??_output_high:
   223   000027                     ??_output_low:
   224   000027                     
   225                           ; 1 bytes @ 0x6
   226   000027                     	ds	2
   227   000029                     ??_arret:
   228   000029                     input@value:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x8
   232   000029                     	ds	2
   233   00002B                     avancer_250ms@i:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xA
   237   00002B                     	ds	2
   238   00002D                     ??_main:
   239                           
   240                           ; 1 bytes @ 0xC
   241   00002D                     	ds	2
   242                           
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 56 in file "main.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   266 ;;Total ram usage:        2 bytes
   267 ;; Hardware stack levels required when called: 7
   268 ;; This function calls:
   269 ;;		_SYSTEM_Initialize
   270 ;;		_TDB
   271 ;;		_TGB
   272 ;;		_arret
   273 ;;		_avancer
   274 ;;		_avancer_250ms
   275 ;;		_input
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text0
   282   00020E                     __ptext0:
   283                           	callstack 0
   284   00020E                     _main:
   285                           	callstack 24
   286   00020E                     
   287                           ;main.c: 58:     SYSTEM_Initialize();
   288   00020E  EC33  F005         	call	_SYSTEM_Initialize	;wreg free
   289   000212                     l251:
   290                           
   291                           ;main.c: 61:     {;main.c: 62:         if ((!input(60)) && (!input(67)))
   292   000212  0E00               	movlw	0
   293   000214  6E26               	movwf	(input@pin+1)^0,c
   294   000216  0E3C               	movlw	60
   295   000218  6E25               	movwf	input@pin^0,c
   296   00021A  EC5A  F000         	call	_input	;wreg free
   297   00021E  5025               	movf	?_input^0,w,c
   298   000220  1026               	iorwf	(?_input+1)^0,w,c
   299   000222  A4D8               	btfss	status,2,c
   300   000224  EF16  F001         	goto	u611
   301   000228  EF18  F001         	goto	u610
   302   00022C                     u611:
   303   00022C  EF29  F001         	goto	l252
   304   000230                     u610:
   305   000230  0E00               	movlw	0
   306   000232  6E26               	movwf	(input@pin+1)^0,c
   307   000234  0E43               	movlw	67
   308   000236  6E25               	movwf	input@pin^0,c
   309   000238  EC5A  F000         	call	_input	;wreg free
   310   00023C  5025               	movf	?_input^0,w,c
   311   00023E  1026               	iorwf	(?_input+1)^0,w,c
   312   000240  A4D8               	btfss	status,2,c
   313   000242  EF25  F001         	goto	u621
   314   000246  EF27  F001         	goto	u620
   315   00024A                     u621:
   316   00024A  EF29  F001         	goto	l252
   317   00024E                     u620:
   318   00024E                     
   319                           ;main.c: 63:         {;main.c: 64:             avancer();
   320   00024E  ECDF  F003         	call	_avancer	;wreg free
   321   000252                     l252:
   322                           
   323                           ;main.c: 66:         if ((input(60)) && (!input(67)))
   324   000252  0E00               	movlw	0
   325   000254  6E26               	movwf	(input@pin+1)^0,c
   326   000256  0E3C               	movlw	60
   327   000258  6E25               	movwf	input@pin^0,c
   328   00025A  EC5A  F000         	call	_input	;wreg free
   329   00025E  5025               	movf	?_input^0,w,c
   330   000260  1026               	iorwf	(?_input+1)^0,w,c
   331   000262  B4D8               	btfsc	status,2,c
   332   000264  EF36  F001         	goto	u631
   333   000268  EF38  F001         	goto	u630
   334   00026C                     u631:
   335   00026C  EF49  F001         	goto	l253
   336   000270                     u630:
   337   000270  0E00               	movlw	0
   338   000272  6E26               	movwf	(input@pin+1)^0,c
   339   000274  0E43               	movlw	67
   340   000276  6E25               	movwf	input@pin^0,c
   341   000278  EC5A  F000         	call	_input	;wreg free
   342   00027C  5025               	movf	?_input^0,w,c
   343   00027E  1026               	iorwf	(?_input+1)^0,w,c
   344   000280  A4D8               	btfss	status,2,c
   345   000282  EF45  F001         	goto	u641
   346   000286  EF47  F001         	goto	u640
   347   00028A                     u641:
   348   00028A  EF49  F001         	goto	l253
   349   00028E                     u640:
   350   00028E                     
   351                           ;main.c: 67:         {;main.c: 68:             TGB();
   352   00028E  EC25  F003         	call	_TGB	;wreg free
   353   000292                     l253:
   354                           
   355                           ;main.c: 70:         if ((!input(60)) && (input(67)))
   356   000292  0E00               	movlw	0
   357   000294  6E26               	movwf	(input@pin+1)^0,c
   358   000296  0E3C               	movlw	60
   359   000298  6E25               	movwf	input@pin^0,c
   360   00029A  EC5A  F000         	call	_input	;wreg free
   361   00029E  5025               	movf	?_input^0,w,c
   362   0002A0  1026               	iorwf	(?_input+1)^0,w,c
   363   0002A2  A4D8               	btfss	status,2,c
   364   0002A4  EF56  F001         	goto	u651
   365   0002A8  EF58  F001         	goto	u650
   366   0002AC                     u651:
   367   0002AC  EF69  F001         	goto	l254
   368   0002B0                     u650:
   369   0002B0  0E00               	movlw	0
   370   0002B2  6E26               	movwf	(input@pin+1)^0,c
   371   0002B4  0E43               	movlw	67
   372   0002B6  6E25               	movwf	input@pin^0,c
   373   0002B8  EC5A  F000         	call	_input	;wreg free
   374   0002BC  5025               	movf	?_input^0,w,c
   375   0002BE  1026               	iorwf	(?_input+1)^0,w,c
   376   0002C0  B4D8               	btfsc	status,2,c
   377   0002C2  EF65  F001         	goto	u661
   378   0002C6  EF67  F001         	goto	u660
   379   0002CA                     u661:
   380   0002CA  EF69  F001         	goto	l254
   381   0002CE                     u660:
   382   0002CE                     
   383                           ;main.c: 71:         {;main.c: 72:             TDB();
   384   0002CE  EC82  F003         	call	_TDB	;wreg free
   385   0002D2                     l254:
   386                           
   387                           ;main.c: 74:         if ((input(60)) && (input(67)))
   388   0002D2  0E00               	movlw	0
   389   0002D4  6E26               	movwf	(input@pin+1)^0,c
   390   0002D6  0E3C               	movlw	60
   391   0002D8  6E25               	movwf	input@pin^0,c
   392   0002DA  EC5A  F000         	call	_input	;wreg free
   393   0002DE  5025               	movf	?_input^0,w,c
   394   0002E0  1026               	iorwf	(?_input+1)^0,w,c
   395   0002E2  B4D8               	btfsc	status,2,c
   396   0002E4  EF76  F001         	goto	u671
   397   0002E8  EF78  F001         	goto	u670
   398   0002EC                     u671:
   399   0002EC  EF09  F001         	goto	l251
   400   0002F0                     u670:
   401   0002F0  0E00               	movlw	0
   402   0002F2  6E26               	movwf	(input@pin+1)^0,c
   403   0002F4  0E43               	movlw	67
   404   0002F6  6E25               	movwf	input@pin^0,c
   405   0002F8  EC5A  F000         	call	_input	;wreg free
   406   0002FC  5025               	movf	?_input^0,w,c
   407   0002FE  1026               	iorwf	(?_input+1)^0,w,c
   408   000300  B4D8               	btfsc	status,2,c
   409   000302  EF85  F001         	goto	u681
   410   000306  EF87  F001         	goto	u680
   411   00030A                     u681:
   412   00030A  EF09  F001         	goto	l251
   413   00030E                     u680:
   414   00030E                     
   415                           ;main.c: 75:         {;main.c: 77:             static int x = 0;;main.c: 78:            
      +                           if (x == 0)
   416   00030E  5019               	movf	main@x^0,w,c
   417   000310  101A               	iorwf	(main@x+1)^0,w,c
   418   000312  A4D8               	btfss	status,2,c
   419   000314  EF8E  F001         	goto	u691
   420   000318  EF90  F001         	goto	u690
   421   00031C                     u691:
   422   00031C  EF98  F001         	goto	l1671
   423   000320                     u690:
   424   000320                     
   425                           ;main.c: 79:             {;main.c: 80:                 avancer_250ms();
   426   000320  EC3B  F004         	call	_avancer_250ms	;wreg free
   427   000324                     
   428                           ;main.c: 81:                 x = 1;
   429   000324  0E00               	movlw	0
   430   000326  6E1A               	movwf	(main@x+1)^0,c
   431   000328  0E01               	movlw	1
   432   00032A  6E19               	movwf	main@x^0,c
   433                           
   434                           ;main.c: 82:             }
   435   00032C  EF09  F001         	goto	l251
   436   000330                     l1671:
   437                           
   438                           ;main.c: 84:             {;main.c: 85:                 arret();
   439   000330  ECE5  F004         	call	_arret	;wreg free
   440   000334                     
   441                           ;main.c: 86:                 _delay((unsigned long)((10000)*(20000000/4000.0)));
   442   000334  0EFE               	movlw	254
   443   000336  6E2E               	movwf	(??_main+1)^0,c
   444   000338  0EA7               	movlw	167
   445   00033A  6E2D               	movwf	??_main^0,c
   446   00033C  0E66               	movlw	102
   447   00033E                     u707:
   448   00033E  2EE8               	decfsz	wreg,f,c
   449   000340  D7FE               	bra	u707
   450   000342  2E2D               	decfsz	??_main^0,f,c
   451   000344  D7FC               	bra	u707
   452   000346  2E2E               	decfsz	(??_main+1)^0,f,c
   453   000348  D7FA               	bra	u707
   454   00034A  EF09  F001         	goto	l251
   455   00034E  EF58  F000         	goto	start
   456   000352                     __end_of_main:
   457                           	callstack 0
   458                           
   459 ;; *************** function _avancer_250ms *****************
   460 ;; Defined at:
   461 ;;		line 105 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  i               2   10[COMRAM] int 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 6
   482 ;; This function calls:
   483 ;;		_arret
   484 ;;		_output_high
   485 ;;		_output_low
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text1
   492   000876                     __ptext1:
   493                           	callstack 0
   494   000876                     _avancer_250ms:
   495                           	callstack 24
   496   000876                     
   497                           ;main.c: 107:     output_high(50);
   498   000876  0E00               	movlw	0
   499   000878  6E26               	movwf	(output_high@pin+1)^0,c
   500   00087A  0E32               	movlw	50
   501   00087C  6E25               	movwf	output_high@pin^0,c
   502   00087E  ECA9  F001         	call	_output_high	;wreg free
   503                           
   504                           ;main.c: 108:     output_low(51);
   505   000882  0E00               	movlw	0
   506   000884  6E26               	movwf	(output_low@pin+1)^0,c
   507   000886  0E33               	movlw	51
   508   000888  6E25               	movwf	output_low@pin^0,c
   509   00088A  EC38  F002         	call	_output_low	;wreg free
   510                           
   511                           ;main.c: 109:     output_high(52);
   512   00088E  0E00               	movlw	0
   513   000890  6E26               	movwf	(output_high@pin+1)^0,c
   514   000892  0E34               	movlw	52
   515   000894  6E25               	movwf	output_high@pin^0,c
   516   000896  ECA9  F001         	call	_output_high	;wreg free
   517                           
   518                           ;main.c: 110:     output_low(53);
   519   00089A  0E00               	movlw	0
   520   00089C  6E26               	movwf	(output_low@pin+1)^0,c
   521   00089E  0E35               	movlw	53
   522   0008A0  6E25               	movwf	output_low@pin^0,c
   523   0008A2  EC38  F002         	call	_output_low	;wreg free
   524   0008A6                     
   525                           ;main.c: 118:     for (int i = 0; i < 500; i++)
   526   0008A6  0E00               	movlw	0
   527   0008A8  6E2C               	movwf	(avancer_250ms@i+1)^0,c
   528   0008AA  0E00               	movlw	0
   529   0008AC  6E2B               	movwf	avancer_250ms@i^0,c
   530   0008AE                     l1633:
   531                           
   532                           ;main.c: 119:     {;main.c: 127:         output_high(71);
   533   0008AE  0E00               	movlw	0
   534   0008B0  6E26               	movwf	(output_high@pin+1)^0,c
   535   0008B2  0E47               	movlw	71
   536   0008B4  6E25               	movwf	output_high@pin^0,c
   537   0008B6  ECA9  F001         	call	_output_high	;wreg free
   538                           
   539                           ;main.c: 128:         output_high(72);
   540   0008BA  0E00               	movlw	0
   541   0008BC  6E26               	movwf	(output_high@pin+1)^0,c
   542   0008BE  0E48               	movlw	72
   543   0008C0  6E25               	movwf	output_high@pin^0,c
   544   0008C2  ECA9  F001         	call	_output_high	;wreg free
   545   0008C6                     
   546                           ;main.c: 129:         _delay((unsigned long)((220)*(20000000/4000000.0)));
   547   0008C6  0EDC               	movlw	220
   548   0008C8                     u717:
   549   0008C8  D000               	nop2	
   550   0008CA  2EE8               	decfsz	wreg,f,c
   551   0008CC  D7FD               	bra	u717
   552   0008CE                     
   553                           ;main.c: 130:         output_low(71);
   554   0008CE  0E00               	movlw	0
   555   0008D0  6E26               	movwf	(output_low@pin+1)^0,c
   556   0008D2  0E47               	movlw	71
   557   0008D4  6E25               	movwf	output_low@pin^0,c
   558   0008D6  EC38  F002         	call	_output_low	;wreg free
   559   0008DA                     
   560                           ;main.c: 131:         output_low(72);
   561   0008DA  0E00               	movlw	0
   562   0008DC  6E26               	movwf	(output_low@pin+1)^0,c
   563   0008DE  0E48               	movlw	72
   564   0008E0  6E25               	movwf	output_low@pin^0,c
   565   0008E2  EC38  F002         	call	_output_low	;wreg free
   566   0008E6                     
   567                           ;main.c: 132:         _delay((unsigned long)((280)*(20000000/4000000.0)));
   568   0008E6  0EC8               	movlw	200
   569   0008E8                     u727:
   570   0008E8  D000               	nop2	
   571   0008EA  D000               	nop2	
   572   0008EC  2EE8               	decfsz	wreg,f,c
   573   0008EE  D7FC               	bra	u727
   574   0008F0                     
   575                           ;main.c: 133:     }
   576   0008F0  4A2B               	infsnz	avancer_250ms@i^0,f,c
   577   0008F2  2A2C               	incf	(avancer_250ms@i+1)^0,f,c
   578   0008F4  BE2C               	btfsc	(avancer_250ms@i+1)^0,7,c
   579   0008F6  EF86  F004         	goto	u601
   580   0008FA  0EF4               	movlw	244
   581   0008FC  5C2B               	subwf	avancer_250ms@i^0,w,c
   582   0008FE  0E01               	movlw	1
   583   000900  582C               	subwfb	(avancer_250ms@i+1)^0,w,c
   584   000902  A0D8               	btfss	status,0,c
   585   000904  EF86  F004         	goto	u601
   586   000908  EF88  F004         	goto	u600
   587   00090C                     u601:
   588   00090C  EF57  F004         	goto	l1633
   589   000910                     u600:
   590   000910                     
   591                           ;main.c: 134:     arret();
   592   000910  ECE5  F004         	call	_arret	;wreg free
   593   000914  0012               	return		;funcret
   594   000916                     __end_of_avancer_250ms:
   595                           	callstack 0
   596                           
   597 ;; *************** function _avancer *****************
   598 ;; Defined at:
   599 ;;		line 144 in file "main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; Hardware stack levels required when called: 6
   620 ;; This function calls:
   621 ;;		_arret
   622 ;;		_input
   623 ;;		_output_high
   624 ;;		_output_low
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text2
   631   0007BE                     __ptext2:
   632                           	callstack 0
   633   0007BE                     _avancer:
   634                           	callstack 24
   635   0007BE                     
   636                           ;main.c: 146:     output_high(50);
   637   0007BE  0E00               	movlw	0
   638   0007C0  6E26               	movwf	(output_high@pin+1)^0,c
   639   0007C2  0E32               	movlw	50
   640   0007C4  6E25               	movwf	output_high@pin^0,c
   641   0007C6  ECA9  F001         	call	_output_high	;wreg free
   642                           
   643                           ;main.c: 147:     output_low(51);
   644   0007CA  0E00               	movlw	0
   645   0007CC  6E26               	movwf	(output_low@pin+1)^0,c
   646   0007CE  0E33               	movlw	51
   647   0007D0  6E25               	movwf	output_low@pin^0,c
   648   0007D2  EC38  F002         	call	_output_low	;wreg free
   649                           
   650                           ;main.c: 148:     output_high(52);
   651   0007D6  0E00               	movlw	0
   652   0007D8  6E26               	movwf	(output_high@pin+1)^0,c
   653   0007DA  0E34               	movlw	52
   654   0007DC  6E25               	movwf	output_high@pin^0,c
   655   0007DE  ECA9  F001         	call	_output_high	;wreg free
   656                           
   657                           ;main.c: 149:     output_low(53);
   658   0007E2  0E00               	movlw	0
   659   0007E4  6E26               	movwf	(output_low@pin+1)^0,c
   660   0007E6  0E35               	movlw	53
   661   0007E8  6E25               	movwf	output_low@pin^0,c
   662   0007EA  EC38  F002         	call	_output_low	;wreg free
   663                           
   664                           ;main.c: 152:     while ((!input(60)) && (!input(67)))
   665   0007EE  EF1A  F004         	goto	l270
   666   0007F2                     l1579:
   667                           
   668                           ;main.c: 153:     {;main.c: 161:         output_high(71);
   669   0007F2  0E00               	movlw	0
   670   0007F4  6E26               	movwf	(output_high@pin+1)^0,c
   671   0007F6  0E47               	movlw	71
   672   0007F8  6E25               	movwf	output_high@pin^0,c
   673   0007FA  ECA9  F001         	call	_output_high	;wreg free
   674                           
   675                           ;main.c: 162:         output_high(72);
   676   0007FE  0E00               	movlw	0
   677   000800  6E26               	movwf	(output_high@pin+1)^0,c
   678   000802  0E48               	movlw	72
   679   000804  6E25               	movwf	output_high@pin^0,c
   680   000806  ECA9  F001         	call	_output_high	;wreg free
   681   00080A                     
   682                           ;main.c: 163:         _delay((unsigned long)((220)*(20000000/4000000.0)));
   683   00080A  0EDC               	movlw	220
   684   00080C                     u737:
   685   00080C  D000               	nop2	
   686   00080E  2EE8               	decfsz	wreg,f,c
   687   000810  D7FD               	bra	u737
   688   000812                     
   689                           ;main.c: 164:         output_low(71);
   690   000812  0E00               	movlw	0
   691   000814  6E26               	movwf	(output_low@pin+1)^0,c
   692   000816  0E47               	movlw	71
   693   000818  6E25               	movwf	output_low@pin^0,c
   694   00081A  EC38  F002         	call	_output_low	;wreg free
   695   00081E                     
   696                           ;main.c: 165:         output_low(72);
   697   00081E  0E00               	movlw	0
   698   000820  6E26               	movwf	(output_low@pin+1)^0,c
   699   000822  0E48               	movlw	72
   700   000824  6E25               	movwf	output_low@pin^0,c
   701   000826  EC38  F002         	call	_output_low	;wreg free
   702   00082A                     
   703                           ;main.c: 166:         _delay((unsigned long)((280)*(20000000/4000000.0)));
   704   00082A  0EC8               	movlw	200
   705   00082C                     u747:
   706   00082C  D000               	nop2	
   707   00082E  D000               	nop2	
   708   000830  2EE8               	decfsz	wreg,f,c
   709   000832  D7FC               	bra	u747
   710   000834                     l270:
   711                           
   712                           ;main.c: 152:     while ((!input(60)) && (!input(67)))
   713   000834  0E00               	movlw	0
   714   000836  6E26               	movwf	(input@pin+1)^0,c
   715   000838  0E3C               	movlw	60
   716   00083A  6E25               	movwf	input@pin^0,c
   717   00083C  EC5A  F000         	call	_input	;wreg free
   718   000840  5025               	movf	?_input^0,w,c
   719   000842  1026               	iorwf	(?_input+1)^0,w,c
   720   000844  A4D8               	btfss	status,2,c
   721   000846  EF27  F004         	goto	u541
   722   00084A  EF29  F004         	goto	u540
   723   00084E                     u541:
   724   00084E  EF38  F004         	goto	l1591
   725   000852                     u540:
   726   000852  0E00               	movlw	0
   727   000854  6E26               	movwf	(input@pin+1)^0,c
   728   000856  0E43               	movlw	67
   729   000858  6E25               	movwf	input@pin^0,c
   730   00085A  EC5A  F000         	call	_input	;wreg free
   731   00085E  5025               	movf	?_input^0,w,c
   732   000860  1026               	iorwf	(?_input+1)^0,w,c
   733   000862  B4D8               	btfsc	status,2,c
   734   000864  EF36  F004         	goto	u551
   735   000868  EF38  F004         	goto	u550
   736   00086C                     u551:
   737   00086C  EFF9  F003         	goto	l1579
   738   000870                     u550:
   739   000870                     l1591:
   740                           
   741                           ;main.c: 168:     arret();
   742   000870  ECE5  F004         	call	_arret	;wreg free
   743   000874  0012               	return		;funcret
   744   000876                     __end_of_avancer:
   745                           	callstack 0
   746                           
   747 ;; *************** function _TGB *****************
   748 ;; Defined at:
   749 ;;		line 179 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 6
   770 ;; This function calls:
   771 ;;		_arret
   772 ;;		_input
   773 ;;		_output_high
   774 ;;		_output_low
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781   00064A                     __ptext3:
   782                           	callstack 0
   783   00064A                     _TGB:
   784                           	callstack 24
   785   00064A                     
   786                           ;main.c: 181:     output_low(50);
   787   00064A  0E00               	movlw	0
   788   00064C  6E26               	movwf	(output_low@pin+1)^0,c
   789   00064E  0E32               	movlw	50
   790   000650  6E25               	movwf	output_low@pin^0,c
   791   000652  EC38  F002         	call	_output_low	;wreg free
   792                           
   793                           ;main.c: 182:     output_high(51);
   794   000656  0E00               	movlw	0
   795   000658  6E26               	movwf	(output_high@pin+1)^0,c
   796   00065A  0E33               	movlw	51
   797   00065C  6E25               	movwf	output_high@pin^0,c
   798   00065E  ECA9  F001         	call	_output_high	;wreg free
   799                           
   800                           ;main.c: 183:     output_high(52);
   801   000662  0E00               	movlw	0
   802   000664  6E26               	movwf	(output_high@pin+1)^0,c
   803   000666  0E34               	movlw	52
   804   000668  6E25               	movwf	output_high@pin^0,c
   805   00066A  ECA9  F001         	call	_output_high	;wreg free
   806                           
   807                           ;main.c: 184:     output_low(53);
   808   00066E  0E00               	movlw	0
   809   000670  6E26               	movwf	(output_low@pin+1)^0,c
   810   000672  0E35               	movlw	53
   811   000674  6E25               	movwf	output_low@pin^0,c
   812   000676  EC38  F002         	call	_output_low	;wreg free
   813                           
   814                           ;main.c: 187:     while ((input(60)) && (!input(67)))
   815   00067A  EF61  F003         	goto	l278
   816   00067E                     l1595:
   817                           
   818                           ;main.c: 188:     {;main.c: 196:         output_high(71);
   819   00067E  0E00               	movlw	0
   820   000680  6E26               	movwf	(output_high@pin+1)^0,c
   821   000682  0E47               	movlw	71
   822   000684  6E25               	movwf	output_high@pin^0,c
   823   000686  ECA9  F001         	call	_output_high	;wreg free
   824                           
   825                           ;main.c: 197:         output_high(72);
   826   00068A  0E00               	movlw	0
   827   00068C  6E26               	movwf	(output_high@pin+1)^0,c
   828   00068E  0E48               	movlw	72
   829   000690  6E25               	movwf	output_high@pin^0,c
   830   000692  ECA9  F001         	call	_output_high	;wreg free
   831   000696                     
   832                           ;main.c: 198:         _delay((unsigned long)((200)*(20000000/4000000.0)));
   833   000696  0EC8               	movlw	200
   834   000698                     u757:
   835   000698  D000               	nop2	
   836   00069A  2EE8               	decfsz	wreg,f,c
   837   00069C  D7FD               	bra	u757
   838   00069E                     
   839                           ;main.c: 200:         output_low(71);
   840   00069E  0E00               	movlw	0
   841   0006A0  6E26               	movwf	(output_low@pin+1)^0,c
   842   0006A2  0E47               	movlw	71
   843   0006A4  6E25               	movwf	output_low@pin^0,c
   844   0006A6  EC38  F002         	call	_output_low	;wreg free
   845   0006AA                     
   846                           ;main.c: 201:         output_low(72);
   847   0006AA  0E00               	movlw	0
   848   0006AC  6E26               	movwf	(output_low@pin+1)^0,c
   849   0006AE  0E48               	movlw	72
   850   0006B0  6E25               	movwf	output_low@pin^0,c
   851   0006B2  EC38  F002         	call	_output_low	;wreg free
   852   0006B6                     
   853                           ;main.c: 202:         _delay((unsigned long)((300)*(20000000/4000000.0)));
   854   0006B6  0ED6               	movlw	214
   855   0006B8                     u767:
   856   0006B8  D000               	nop2	
   857   0006BA  D000               	nop2	
   858   0006BC  2EE8               	decfsz	wreg,f,c
   859   0006BE  D7FC               	bra	u767
   860   0006C0  D000               	nop2	
   861   0006C2                     l278:
   862                           
   863                           ;main.c: 187:     while ((input(60)) && (!input(67)))
   864   0006C2  0E00               	movlw	0
   865   0006C4  6E26               	movwf	(input@pin+1)^0,c
   866   0006C6  0E3C               	movlw	60
   867   0006C8  6E25               	movwf	input@pin^0,c
   868   0006CA  EC5A  F000         	call	_input	;wreg free
   869   0006CE  5025               	movf	?_input^0,w,c
   870   0006D0  1026               	iorwf	(?_input+1)^0,w,c
   871   0006D2  B4D8               	btfsc	status,2,c
   872   0006D4  EF6E  F003         	goto	u561
   873   0006D8  EF70  F003         	goto	u560
   874   0006DC                     u561:
   875   0006DC  EF7F  F003         	goto	l1607
   876   0006E0                     u560:
   877   0006E0  0E00               	movlw	0
   878   0006E2  6E26               	movwf	(input@pin+1)^0,c
   879   0006E4  0E43               	movlw	67
   880   0006E6  6E25               	movwf	input@pin^0,c
   881   0006E8  EC5A  F000         	call	_input	;wreg free
   882   0006EC  5025               	movf	?_input^0,w,c
   883   0006EE  1026               	iorwf	(?_input+1)^0,w,c
   884   0006F0  B4D8               	btfsc	status,2,c
   885   0006F2  EF7D  F003         	goto	u571
   886   0006F6  EF7F  F003         	goto	u570
   887   0006FA                     u571:
   888   0006FA  EF3F  F003         	goto	l1595
   889   0006FE                     u570:
   890   0006FE                     l1607:
   891                           
   892                           ;main.c: 204:     arret();
   893   0006FE  ECE5  F004         	call	_arret	;wreg free
   894   000702  0012               	return		;funcret
   895   000704                     __end_of_TGB:
   896                           	callstack 0
   897                           
   898 ;; *************** function _TDB *****************
   899 ;; Defined at:
   900 ;;		line 215 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 6
   921 ;; This function calls:
   922 ;;		_arret
   923 ;;		_input
   924 ;;		_output_high
   925 ;;		_output_low
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text4
   932   000704                     __ptext4:
   933                           	callstack 0
   934   000704                     _TDB:
   935                           	callstack 24
   936   000704                     
   937                           ;main.c: 217:     output_high(50);
   938   000704  0E00               	movlw	0
   939   000706  6E26               	movwf	(output_high@pin+1)^0,c
   940   000708  0E32               	movlw	50
   941   00070A  6E25               	movwf	output_high@pin^0,c
   942   00070C  ECA9  F001         	call	_output_high	;wreg free
   943                           
   944                           ;main.c: 218:     output_low(51);
   945   000710  0E00               	movlw	0
   946   000712  6E26               	movwf	(output_low@pin+1)^0,c
   947   000714  0E33               	movlw	51
   948   000716  6E25               	movwf	output_low@pin^0,c
   949   000718  EC38  F002         	call	_output_low	;wreg free
   950                           
   951                           ;main.c: 219:     output_low(52);
   952   00071C  0E00               	movlw	0
   953   00071E  6E26               	movwf	(output_low@pin+1)^0,c
   954   000720  0E34               	movlw	52
   955   000722  6E25               	movwf	output_low@pin^0,c
   956   000724  EC38  F002         	call	_output_low	;wreg free
   957                           
   958                           ;main.c: 220:     output_high(53);
   959   000728  0E00               	movlw	0
   960   00072A  6E26               	movwf	(output_high@pin+1)^0,c
   961   00072C  0E35               	movlw	53
   962   00072E  6E25               	movwf	output_high@pin^0,c
   963   000730  ECA9  F001         	call	_output_high	;wreg free
   964                           
   965                           ;main.c: 223:     while ((!input(60)) && (input(67)))
   966   000734  EFBE  F003         	goto	l286
   967   000738                     l1611:
   968                           
   969                           ;main.c: 224:     {;main.c: 232:         output_high(71);
   970   000738  0E00               	movlw	0
   971   00073A  6E26               	movwf	(output_high@pin+1)^0,c
   972   00073C  0E47               	movlw	71
   973   00073E  6E25               	movwf	output_high@pin^0,c
   974   000740  ECA9  F001         	call	_output_high	;wreg free
   975                           
   976                           ;main.c: 233:         output_high(72);
   977   000744  0E00               	movlw	0
   978   000746  6E26               	movwf	(output_high@pin+1)^0,c
   979   000748  0E48               	movlw	72
   980   00074A  6E25               	movwf	output_high@pin^0,c
   981   00074C  ECA9  F001         	call	_output_high	;wreg free
   982   000750                     
   983                           ;main.c: 234:         _delay((unsigned long)((200)*(20000000/4000000.0)));
   984   000750  0EC8               	movlw	200
   985   000752                     u777:
   986   000752  D000               	nop2	
   987   000754  2EE8               	decfsz	wreg,f,c
   988   000756  D7FD               	bra	u777
   989   000758                     
   990                           ;main.c: 236:         output_low(71);
   991   000758  0E00               	movlw	0
   992   00075A  6E26               	movwf	(output_low@pin+1)^0,c
   993   00075C  0E47               	movlw	71
   994   00075E  6E25               	movwf	output_low@pin^0,c
   995   000760  EC38  F002         	call	_output_low	;wreg free
   996   000764                     
   997                           ;main.c: 237:         output_low(72);
   998   000764  0E00               	movlw	0
   999   000766  6E26               	movwf	(output_low@pin+1)^0,c
  1000   000768  0E48               	movlw	72
  1001   00076A  6E25               	movwf	output_low@pin^0,c
  1002   00076C  EC38  F002         	call	_output_low	;wreg free
  1003   000770                     
  1004                           ;main.c: 238:         _delay((unsigned long)((300)*(20000000/4000000.0)));
  1005   000770  0ED6               	movlw	214
  1006   000772                     u787:
  1007   000772  D000               	nop2	
  1008   000774  D000               	nop2	
  1009   000776  2EE8               	decfsz	wreg,f,c
  1010   000778  D7FC               	bra	u787
  1011   00077A  D000               	nop2	
  1012   00077C                     l286:
  1013                           
  1014                           ;main.c: 223:     while ((!input(60)) && (input(67)))
  1015   00077C  0E00               	movlw	0
  1016   00077E  6E26               	movwf	(input@pin+1)^0,c
  1017   000780  0E3C               	movlw	60
  1018   000782  6E25               	movwf	input@pin^0,c
  1019   000784  EC5A  F000         	call	_input	;wreg free
  1020   000788  5025               	movf	?_input^0,w,c
  1021   00078A  1026               	iorwf	(?_input+1)^0,w,c
  1022   00078C  A4D8               	btfss	status,2,c
  1023   00078E  EFCB  F003         	goto	u581
  1024   000792  EFCD  F003         	goto	u580
  1025   000796                     u581:
  1026   000796  EFDC  F003         	goto	l1623
  1027   00079A                     u580:
  1028   00079A  0E00               	movlw	0
  1029   00079C  6E26               	movwf	(input@pin+1)^0,c
  1030   00079E  0E43               	movlw	67
  1031   0007A0  6E25               	movwf	input@pin^0,c
  1032   0007A2  EC5A  F000         	call	_input	;wreg free
  1033   0007A6  5025               	movf	?_input^0,w,c
  1034   0007A8  1026               	iorwf	(?_input+1)^0,w,c
  1035   0007AA  A4D8               	btfss	status,2,c
  1036   0007AC  EFDA  F003         	goto	u591
  1037   0007B0  EFDC  F003         	goto	u590
  1038   0007B4                     u591:
  1039   0007B4  EF9C  F003         	goto	l1611
  1040   0007B8                     u590:
  1041   0007B8                     l1623:
  1042                           
  1043                           ;main.c: 240:     arret();
  1044   0007B8  ECE5  F004         	call	_arret	;wreg free
  1045   0007BC  0012               	return		;funcret
  1046   0007BE                     __end_of_TDB:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function _output_high *****************
  1050 ;; Defined at:
  1051 ;;		line 25 in file "prog211.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  pin             2    4[COMRAM] unsigned int 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1069 ;;Total ram usage:        4 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; Hardware stack levels required when called: 4
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_avancer_250ms
  1076 ;;		_avancer
  1077 ;;		_TGB
  1078 ;;		_TDB
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text5
  1083   000352                     __ptext5:
  1084                           	callstack 0
  1085   000352                     _output_high:
  1086                           	callstack 25
  1087   000352                     
  1088                           ;prog211.c: 25: void output_high(unsigned pin);prog211.c: 26: {;prog211.c: 28:     switc
      +                          h(pin)
  1089   000352  EFE1  F001         	goto	l1563
  1090   000356                     l307:
  1091   000356  8089               	bsf	137,0,c	;volatile
  1092   000358  EF37  F002         	goto	l361
  1093   00035C                     l311:
  1094   00035C  8289               	bsf	137,1,c	;volatile
  1095   00035E  EF37  F002         	goto	l361
  1096   000362                     l314:
  1097   000362  8489               	bsf	137,2,c	;volatile
  1098   000364  EF37  F002         	goto	l361
  1099   000368                     l317:
  1100   000368  8689               	bsf	137,3,c	;volatile
  1101   00036A  EF37  F002         	goto	l361
  1102   00036E                     l320:
  1103   00036E  8A89               	bsf	137,5,c	;volatile
  1104   000370  EF37  F002         	goto	l361
  1105   000374                     l323:
  1106   000374  828A               	bsf	138,1,c	;volatile
  1107   000376  EF37  F002         	goto	l361
  1108   00037A                     l326:
  1109   00037A  848A               	bsf	138,2,c	;volatile
  1110   00037C  EF37  F002         	goto	l361
  1111   000380                     l329:
  1112   000380  868A               	bsf	138,3,c	;volatile
  1113   000382  EF37  F002         	goto	l361
  1114   000386                     l332:
  1115   000386  888A               	bsf	138,4,c	;volatile
  1116   000388  EF37  F002         	goto	l361
  1117   00038C                     l335:
  1118   00038C  8A8A               	bsf	138,5,c	;volatile
  1119   00038E  EF37  F002         	goto	l361
  1120   000392                     l338:
  1121   000392  8C8A               	bsf	138,6,c	;volatile
  1122   000394  EF37  F002         	goto	l361
  1123   000398                     l341:
  1124   000398  8E8A               	bsf	138,7,c	;volatile
  1125   00039A  EF37  F002         	goto	l361
  1126   00039E                     l344:
  1127   00039E  808B               	bsf	139,0,c	;volatile
  1128   0003A0  EF37  F002         	goto	l361
  1129   0003A4                     l347:
  1130   0003A4  828B               	bsf	139,1,c	;volatile
  1131   0003A6  EF37  F002         	goto	l361
  1132   0003AA                     l350:
  1133   0003AA  848B               	bsf	139,2,c	;volatile
  1134   0003AC  EF37  F002         	goto	l361
  1135   0003B0                     l353:
  1136   0003B0  868B               	bsf	139,3,c	;volatile
  1137   0003B2  EF37  F002         	goto	l361
  1138   0003B6                     l356:
  1139   0003B6  888B               	bsf	139,4,c	;volatile
  1140   0003B8  EF37  F002         	goto	l361
  1141   0003BC                     l359:
  1142   0003BC  8A8B               	bsf	139,5,c	;volatile
  1143   0003BE  EF37  F002         	goto	l361
  1144   0003C2                     l1563:
  1145   0003C2  C025  F027         	movff	output_high@pin,??_output_high
  1146   0003C6  C026  F028         	movff	output_high@pin+1,??_output_high+1
  1147                           
  1148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1149                           ; Switch size 1, requested type "simple"
  1150                           ; Number of cases is 1, Range of values is 0 to 0
  1151                           ; switch strategies available:
  1152                           ; Name         Instructions Cycles
  1153                           ; simple_byte            4     3 (average)
  1154                           ;	Chosen strategy is simple_byte
  1155   0003CA  5028               	movf	(??_output_high+1)^0,w,c
  1156   0003CC  0A00               	xorlw	0	; case 0
  1157   0003CE  B4D8               	btfsc	status,2,c
  1158   0003D0  EFEC  F001         	goto	l1735
  1159   0003D4  EF37  F002         	goto	l361
  1160   0003D8                     l1735:
  1161                           
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 18, Range of values is 50 to 75
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte           55    28 (average)
  1167                           ;	Chosen strategy is simple_byte
  1168   0003D8  5027               	movf	??_output_high^0,w,c
  1169   0003DA  0A32               	xorlw	50	; case 50
  1170   0003DC  B4D8               	btfsc	status,2,c
  1171   0003DE  EFAB  F001         	goto	l307
  1172   0003E2  0A01               	xorlw	1	; case 51
  1173   0003E4  B4D8               	btfsc	status,2,c
  1174   0003E6  EFAE  F001         	goto	l311
  1175   0003EA  0A07               	xorlw	7	; case 52
  1176   0003EC  B4D8               	btfsc	status,2,c
  1177   0003EE  EFB1  F001         	goto	l314
  1178   0003F2  0A01               	xorlw	1	; case 53
  1179   0003F4  B4D8               	btfsc	status,2,c
  1180   0003F6  EFB4  F001         	goto	l317
  1181   0003FA  0A02               	xorlw	2	; case 55
  1182   0003FC  B4D8               	btfsc	status,2,c
  1183   0003FE  EFB7  F001         	goto	l320
  1184   000402  0A0A               	xorlw	10	; case 61
  1185   000404  B4D8               	btfsc	status,2,c
  1186   000406  EFBA  F001         	goto	l323
  1187   00040A  0A03               	xorlw	3	; case 62
  1188   00040C  B4D8               	btfsc	status,2,c
  1189   00040E  EFBD  F001         	goto	l326
  1190   000412  0A01               	xorlw	1	; case 63
  1191   000414  B4D8               	btfsc	status,2,c
  1192   000416  EFC0  F001         	goto	l329
  1193   00041A  0A7F               	xorlw	127	; case 64
  1194   00041C  B4D8               	btfsc	status,2,c
  1195   00041E  EFC3  F001         	goto	l332
  1196   000422  0A01               	xorlw	1	; case 65
  1197   000424  B4D8               	btfsc	status,2,c
  1198   000426  EFC6  F001         	goto	l335
  1199   00042A  0A03               	xorlw	3	; case 66
  1200   00042C  B4D8               	btfsc	status,2,c
  1201   00042E  EFC9  F001         	goto	l338
  1202   000432  0A01               	xorlw	1	; case 67
  1203   000434  B4D8               	btfsc	status,2,c
  1204   000436  EFCC  F001         	goto	l341
  1205   00043A  0A05               	xorlw	5	; case 70
  1206   00043C  B4D8               	btfsc	status,2,c
  1207   00043E  EFCF  F001         	goto	l344
  1208   000442  0A01               	xorlw	1	; case 71
  1209   000444  B4D8               	btfsc	status,2,c
  1210   000446  EFD2  F001         	goto	l347
  1211   00044A  0A0F               	xorlw	15	; case 72
  1212   00044C  B4D8               	btfsc	status,2,c
  1213   00044E  EFD5  F001         	goto	l350
  1214   000452  0A01               	xorlw	1	; case 73
  1215   000454  B4D8               	btfsc	status,2,c
  1216   000456  EFD8  F001         	goto	l353
  1217   00045A  0A03               	xorlw	3	; case 74
  1218   00045C  B4D8               	btfsc	status,2,c
  1219   00045E  EFDB  F001         	goto	l356
  1220   000462  0A01               	xorlw	1	; case 75
  1221   000464  B4D8               	btfsc	status,2,c
  1222   000466  EFDE  F001         	goto	l359
  1223   00046A  EF37  F002         	goto	l361
  1224   00046E                     l361:
  1225   00046E  0012               	return		;funcret
  1226   000470                     __end_of_output_high:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _input *****************
  1230 ;; Defined at:
  1231 ;;		line 139 in file "prog211.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  pin             2    4[COMRAM] unsigned int 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  value           2    8[COMRAM] int 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2    4[COMRAM] int 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;Total ram usage:        6 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 4
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;;		_avancer
  1257 ;;		_TGB
  1258 ;;		_TDB
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text6
  1263   0000B4                     __ptext6:
  1264                           	callstack 0
  1265   0000B4                     _input:
  1266                           	callstack 26
  1267   0000B4                     
  1268                           ;prog211.c: 139: int input(unsigned pin);prog211.c: 140: {;prog211.c: 141:     int value
      +                          ;;prog211.c: 143:     switch(pin)
  1269   0000B4  EFD4  F000         	goto	l1549
  1270   0000B8                     l1531:
  1271   0000B8  B081               	btfsc	129,0,c	;volatile
  1272   0000BA  EF61  F000         	goto	u461
  1273   0000BE  EF65  F000         	goto	u460
  1274   0000C2                     u461:
  1275   0000C2  6A27               	clrf	??_input^0,c
  1276   0000C4  2A27               	incf	??_input^0,f,c
  1277   0000C6  EF66  F000         	goto	u468
  1278   0000CA                     u460:
  1279   0000CA  6A27               	clrf	??_input^0,c
  1280   0000CC                     u468:
  1281   0000CC  5027               	movf	??_input^0,w,c
  1282   0000CE  6E29               	movwf	input@value^0,c
  1283   0000D0  6A2A               	clrf	(input@value+1)^0,c
  1284                           
  1285                           ;prog211.c: 146:                  break;
  1286   0000D2  EF02  F001         	goto	l425
  1287   0000D6                     l1533:
  1288   0000D6  B281               	btfsc	129,1,c	;volatile
  1289   0000D8  EF70  F000         	goto	u471
  1290   0000DC  EF74  F000         	goto	u470
  1291   0000E0                     u471:
  1292   0000E0  6A27               	clrf	??_input^0,c
  1293   0000E2  2A27               	incf	??_input^0,f,c
  1294   0000E4  EF75  F000         	goto	u478
  1295   0000E8                     u470:
  1296   0000E8  6A27               	clrf	??_input^0,c
  1297   0000EA                     u478:
  1298   0000EA  5027               	movf	??_input^0,w,c
  1299   0000EC  6E29               	movwf	input@value^0,c
  1300   0000EE  6A2A               	clrf	(input@value+1)^0,c
  1301                           
  1302                           ;prog211.c: 148:                  break;
  1303   0000F0  EF02  F001         	goto	l425
  1304   0000F4                     l1535:
  1305   0000F4  B481               	btfsc	129,2,c	;volatile
  1306   0000F6  EF7F  F000         	goto	u481
  1307   0000FA  EF83  F000         	goto	u480
  1308   0000FE                     u481:
  1309   0000FE  6A27               	clrf	??_input^0,c
  1310   000100  2A27               	incf	??_input^0,f,c
  1311   000102  EF84  F000         	goto	u488
  1312   000106                     u480:
  1313   000106  6A27               	clrf	??_input^0,c
  1314   000108                     u488:
  1315   000108  5027               	movf	??_input^0,w,c
  1316   00010A  6E29               	movwf	input@value^0,c
  1317   00010C  6A2A               	clrf	(input@value+1)^0,c
  1318                           
  1319                           ;prog211.c: 150:                  break;
  1320   00010E  EF02  F001         	goto	l425
  1321   000112                     l1537:
  1322   000112  B681               	btfsc	129,3,c	;volatile
  1323   000114  EF8E  F000         	goto	u491
  1324   000118  EF92  F000         	goto	u490
  1325   00011C                     u491:
  1326   00011C  6A27               	clrf	??_input^0,c
  1327   00011E  2A27               	incf	??_input^0,f,c
  1328   000120  EF93  F000         	goto	u498
  1329   000124                     u490:
  1330   000124  6A27               	clrf	??_input^0,c
  1331   000126                     u498:
  1332   000126  5027               	movf	??_input^0,w,c
  1333   000128  6E29               	movwf	input@value^0,c
  1334   00012A  6A2A               	clrf	(input@value+1)^0,c
  1335                           
  1336                           ;prog211.c: 152:                  break;
  1337   00012C  EF02  F001         	goto	l425
  1338   000130                     l1539:
  1339   000130  B881               	btfsc	129,4,c	;volatile
  1340   000132  EF9D  F000         	goto	u501
  1341   000136  EFA1  F000         	goto	u500
  1342   00013A                     u501:
  1343   00013A  6A27               	clrf	??_input^0,c
  1344   00013C  2A27               	incf	??_input^0,f,c
  1345   00013E  EFA2  F000         	goto	u508
  1346   000142                     u500:
  1347   000142  6A27               	clrf	??_input^0,c
  1348   000144                     u508:
  1349   000144  5027               	movf	??_input^0,w,c
  1350   000146  6E29               	movwf	input@value^0,c
  1351   000148  6A2A               	clrf	(input@value+1)^0,c
  1352                           
  1353                           ;prog211.c: 154:                  break;
  1354   00014A  EF02  F001         	goto	l425
  1355   00014E                     l1541:
  1356   00014E  BA81               	btfsc	129,5,c	;volatile
  1357   000150  EFAC  F000         	goto	u511
  1358   000154  EFB0  F000         	goto	u510
  1359   000158                     u511:
  1360   000158  6A27               	clrf	??_input^0,c
  1361   00015A  2A27               	incf	??_input^0,f,c
  1362   00015C  EFB1  F000         	goto	u518
  1363   000160                     u510:
  1364   000160  6A27               	clrf	??_input^0,c
  1365   000162                     u518:
  1366   000162  5027               	movf	??_input^0,w,c
  1367   000164  6E29               	movwf	input@value^0,c
  1368   000166  6A2A               	clrf	(input@value+1)^0,c
  1369                           
  1370                           ;prog211.c: 156:                  break;
  1371   000168  EF02  F001         	goto	l425
  1372   00016C                     l1543:
  1373   00016C  BC81               	btfsc	129,6,c	;volatile
  1374   00016E  EFBB  F000         	goto	u521
  1375   000172  EFBF  F000         	goto	u520
  1376   000176                     u521:
  1377   000176  6A27               	clrf	??_input^0,c
  1378   000178  2A27               	incf	??_input^0,f,c
  1379   00017A  EFC0  F000         	goto	u528
  1380   00017E                     u520:
  1381   00017E  6A27               	clrf	??_input^0,c
  1382   000180                     u528:
  1383   000180  5027               	movf	??_input^0,w,c
  1384   000182  6E29               	movwf	input@value^0,c
  1385   000184  6A2A               	clrf	(input@value+1)^0,c
  1386                           
  1387                           ;prog211.c: 158:                  break;
  1388   000186  EF02  F001         	goto	l425
  1389   00018A                     l1545:
  1390   00018A  BE81               	btfsc	129,7,c	;volatile
  1391   00018C  EFCA  F000         	goto	u531
  1392   000190  EFCE  F000         	goto	u530
  1393   000194                     u531:
  1394   000194  6A27               	clrf	??_input^0,c
  1395   000196  2A27               	incf	??_input^0,f,c
  1396   000198  EFCF  F000         	goto	u538
  1397   00019C                     u530:
  1398   00019C  6A27               	clrf	??_input^0,c
  1399   00019E                     u538:
  1400   00019E  5027               	movf	??_input^0,w,c
  1401   0001A0  6E29               	movwf	input@value^0,c
  1402   0001A2  6A2A               	clrf	(input@value+1)^0,c
  1403                           
  1404                           ;prog211.c: 160:                  break;
  1405   0001A4  EF02  F001         	goto	l425
  1406   0001A8                     l1549:
  1407   0001A8  C025  F027         	movff	input@pin,??_input
  1408   0001AC  C026  F028         	movff	input@pin+1,??_input+1
  1409                           
  1410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1411                           ; Switch size 1, requested type "simple"
  1412                           ; Number of cases is 1, Range of values is 0 to 0
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; simple_byte            4     3 (average)
  1416                           ;	Chosen strategy is simple_byte
  1417   0001B0  5028               	movf	(??_input+1)^0,w,c
  1418   0001B2  0A00               	xorlw	0	; case 0
  1419   0001B4  B4D8               	btfsc	status,2,c
  1420   0001B6  EFDF  F000         	goto	l1737
  1421   0001BA  EF02  F001         	goto	l425
  1422   0001BE                     l1737:
  1423                           
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 8, Range of values is 60 to 67
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte           25    13 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430   0001BE  5027               	movf	??_input^0,w,c
  1431   0001C0  0A3C               	xorlw	60	; case 60
  1432   0001C2  B4D8               	btfsc	status,2,c
  1433   0001C4  EF5C  F000         	goto	l1531
  1434   0001C8  0A01               	xorlw	1	; case 61
  1435   0001CA  B4D8               	btfsc	status,2,c
  1436   0001CC  EF6B  F000         	goto	l1533
  1437   0001D0  0A03               	xorlw	3	; case 62
  1438   0001D2  B4D8               	btfsc	status,2,c
  1439   0001D4  EF7A  F000         	goto	l1535
  1440   0001D8  0A01               	xorlw	1	; case 63
  1441   0001DA  B4D8               	btfsc	status,2,c
  1442   0001DC  EF89  F000         	goto	l1537
  1443   0001E0  0A7F               	xorlw	127	; case 64
  1444   0001E2  B4D8               	btfsc	status,2,c
  1445   0001E4  EF98  F000         	goto	l1539
  1446   0001E8  0A01               	xorlw	1	; case 65
  1447   0001EA  B4D8               	btfsc	status,2,c
  1448   0001EC  EFA7  F000         	goto	l1541
  1449   0001F0  0A03               	xorlw	3	; case 66
  1450   0001F2  B4D8               	btfsc	status,2,c
  1451   0001F4  EFB6  F000         	goto	l1543
  1452   0001F8  0A01               	xorlw	1	; case 67
  1453   0001FA  B4D8               	btfsc	status,2,c
  1454   0001FC  EFC5  F000         	goto	l1545
  1455   000200  EF02  F001         	goto	l425
  1456   000204                     l425:
  1457                           
  1458                           ;prog211.c: 163:     return value;
  1459   000204  C029  F025         	movff	input@value,?_input
  1460   000208  C02A  F026         	movff	input@value+1,?_input+1
  1461   00020C  0012               	return		;funcret
  1462   00020E                     __end_of_input:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _arret *****************
  1466 ;; Defined at:
  1467 ;;		line 249 in file "main.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;Total ram usage:        2 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 5
  1488 ;; This function calls:
  1489 ;;		_output_low
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;;		_avancer_250ms
  1493 ;;		_avancer
  1494 ;;		_TGB
  1495 ;;		_TDB
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text7
  1500   0009CA                     __ptext7:
  1501                           	callstack 0
  1502   0009CA                     _arret:
  1503                           	callstack 24
  1504   0009CA                     
  1505                           ;main.c: 250:     output_low(71);
  1506   0009CA  0E00               	movlw	0
  1507   0009CC  6E26               	movwf	(output_low@pin+1)^0,c
  1508   0009CE  0E47               	movlw	71
  1509   0009D0  6E25               	movwf	output_low@pin^0,c
  1510   0009D2  EC38  F002         	call	_output_low	;wreg free
  1511                           
  1512                           ;main.c: 251:     output_low(72);
  1513   0009D6  0E00               	movlw	0
  1514   0009D8  6E26               	movwf	(output_low@pin+1)^0,c
  1515   0009DA  0E48               	movlw	72
  1516   0009DC  6E25               	movwf	output_low@pin^0,c
  1517   0009DE  EC38  F002         	call	_output_low	;wreg free
  1518   0009E2                     
  1519                           ;main.c: 252:     _delay((unsigned long)((250)*(20000000/4000.0)));
  1520   0009E2  0E07               	movlw	7
  1521   0009E4  6E2A               	movwf	(??_arret+1)^0,c
  1522   0009E6  0E58               	movlw	88
  1523   0009E8  6E29               	movwf	??_arret^0,c
  1524   0009EA  0E5A               	movlw	90
  1525   0009EC                     u797:
  1526   0009EC  2EE8               	decfsz	wreg,f,c
  1527   0009EE  D7FE               	bra	u797
  1528   0009F0  2E29               	decfsz	??_arret^0,f,c
  1529   0009F2  D7FC               	bra	u797
  1530   0009F4  2E2A               	decfsz	(??_arret+1)^0,f,c
  1531   0009F6  D7FA               	bra	u797
  1532   0009F8  0012               	return		;funcret
  1533   0009FA                     __end_of_arret:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _output_low *****************
  1537 ;; Defined at:
  1538 ;;		line 83 in file "prog211.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  pin             2    4[COMRAM] unsigned int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;Total ram usage:        4 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 4
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_avancer_250ms
  1563 ;;		_avancer
  1564 ;;		_TGB
  1565 ;;		_TDB
  1566 ;;		_arret
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text8
  1571   000470                     __ptext8:
  1572                           	callstack 0
  1573   000470                     _output_low:
  1574                           	callstack 25
  1575   000470                     
  1576                           ;prog211.c: 83: void output_low(unsigned pin);prog211.c: 84: {;prog211.c: 86:     switch
      +                          (pin)
  1577   000470  EF70  F002         	goto	l1499
  1578   000474                     l366:
  1579   000474  9089               	bcf	137,0,c	;volatile
  1580   000476  EFC6  F002         	goto	l420
  1581   00047A                     l370:
  1582   00047A  9289               	bcf	137,1,c	;volatile
  1583   00047C  EFC6  F002         	goto	l420
  1584   000480                     l373:
  1585   000480  9489               	bcf	137,2,c	;volatile
  1586   000482  EFC6  F002         	goto	l420
  1587   000486                     l376:
  1588   000486  9689               	bcf	137,3,c	;volatile
  1589   000488  EFC6  F002         	goto	l420
  1590   00048C                     l379:
  1591   00048C  9A89               	bcf	137,5,c	;volatile
  1592   00048E  EFC6  F002         	goto	l420
  1593   000492                     l382:
  1594   000492  928A               	bcf	138,1,c	;volatile
  1595   000494  EFC6  F002         	goto	l420
  1596   000498                     l385:
  1597   000498  948A               	bcf	138,2,c	;volatile
  1598   00049A  EFC6  F002         	goto	l420
  1599   00049E                     l388:
  1600   00049E  968A               	bcf	138,3,c	;volatile
  1601   0004A0  EFC6  F002         	goto	l420
  1602   0004A4                     l391:
  1603   0004A4  988A               	bcf	138,4,c	;volatile
  1604   0004A6  EFC6  F002         	goto	l420
  1605   0004AA                     l394:
  1606   0004AA  9A8A               	bcf	138,5,c	;volatile
  1607   0004AC  EFC6  F002         	goto	l420
  1608   0004B0                     l397:
  1609   0004B0  9C8A               	bcf	138,6,c	;volatile
  1610   0004B2  EFC6  F002         	goto	l420
  1611   0004B6                     l400:
  1612   0004B6  9E8A               	bcf	138,7,c	;volatile
  1613   0004B8  EFC6  F002         	goto	l420
  1614   0004BC                     l403:
  1615   0004BC  908B               	bcf	139,0,c	;volatile
  1616   0004BE  EFC6  F002         	goto	l420
  1617   0004C2                     l406:
  1618   0004C2  928B               	bcf	139,1,c	;volatile
  1619   0004C4  EFC6  F002         	goto	l420
  1620   0004C8                     l409:
  1621   0004C8  948B               	bcf	139,2,c	;volatile
  1622   0004CA  EFC6  F002         	goto	l420
  1623   0004CE                     l412:
  1624   0004CE  968B               	bcf	139,3,c	;volatile
  1625   0004D0  EFC6  F002         	goto	l420
  1626   0004D4                     l415:
  1627   0004D4  988B               	bcf	139,4,c	;volatile
  1628   0004D6  EFC6  F002         	goto	l420
  1629   0004DA                     l418:
  1630   0004DA  9A8B               	bcf	139,5,c	;volatile
  1631   0004DC  EFC6  F002         	goto	l420
  1632   0004E0                     l1499:
  1633   0004E0  C025  F027         	movff	output_low@pin,??_output_low
  1634   0004E4  C026  F028         	movff	output_low@pin+1,??_output_low+1
  1635                           
  1636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 1, Range of values is 0 to 0
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte            4     3 (average)
  1642                           ;	Chosen strategy is simple_byte
  1643   0004E8  5028               	movf	(??_output_low+1)^0,w,c
  1644   0004EA  0A00               	xorlw	0	; case 0
  1645   0004EC  B4D8               	btfsc	status,2,c
  1646   0004EE  EF7B  F002         	goto	l1739
  1647   0004F2  EFC6  F002         	goto	l420
  1648   0004F6                     l1739:
  1649                           
  1650                           ; Switch size 1, requested type "simple"
  1651                           ; Number of cases is 18, Range of values is 50 to 75
  1652                           ; switch strategies available:
  1653                           ; Name         Instructions Cycles
  1654                           ; simple_byte           55    28 (average)
  1655                           ;	Chosen strategy is simple_byte
  1656   0004F6  5027               	movf	??_output_low^0,w,c
  1657   0004F8  0A32               	xorlw	50	; case 50
  1658   0004FA  B4D8               	btfsc	status,2,c
  1659   0004FC  EF3A  F002         	goto	l366
  1660   000500  0A01               	xorlw	1	; case 51
  1661   000502  B4D8               	btfsc	status,2,c
  1662   000504  EF3D  F002         	goto	l370
  1663   000508  0A07               	xorlw	7	; case 52
  1664   00050A  B4D8               	btfsc	status,2,c
  1665   00050C  EF40  F002         	goto	l373
  1666   000510  0A01               	xorlw	1	; case 53
  1667   000512  B4D8               	btfsc	status,2,c
  1668   000514  EF43  F002         	goto	l376
  1669   000518  0A02               	xorlw	2	; case 55
  1670   00051A  B4D8               	btfsc	status,2,c
  1671   00051C  EF46  F002         	goto	l379
  1672   000520  0A0A               	xorlw	10	; case 61
  1673   000522  B4D8               	btfsc	status,2,c
  1674   000524  EF49  F002         	goto	l382
  1675   000528  0A03               	xorlw	3	; case 62
  1676   00052A  B4D8               	btfsc	status,2,c
  1677   00052C  EF4C  F002         	goto	l385
  1678   000530  0A01               	xorlw	1	; case 63
  1679   000532  B4D8               	btfsc	status,2,c
  1680   000534  EF4F  F002         	goto	l388
  1681   000538  0A7F               	xorlw	127	; case 64
  1682   00053A  B4D8               	btfsc	status,2,c
  1683   00053C  EF52  F002         	goto	l391
  1684   000540  0A01               	xorlw	1	; case 65
  1685   000542  B4D8               	btfsc	status,2,c
  1686   000544  EF55  F002         	goto	l394
  1687   000548  0A03               	xorlw	3	; case 66
  1688   00054A  B4D8               	btfsc	status,2,c
  1689   00054C  EF58  F002         	goto	l397
  1690   000550  0A01               	xorlw	1	; case 67
  1691   000552  B4D8               	btfsc	status,2,c
  1692   000554  EF5B  F002         	goto	l400
  1693   000558  0A05               	xorlw	5	; case 70
  1694   00055A  B4D8               	btfsc	status,2,c
  1695   00055C  EF5E  F002         	goto	l403
  1696   000560  0A01               	xorlw	1	; case 71
  1697   000562  B4D8               	btfsc	status,2,c
  1698   000564  EF61  F002         	goto	l406
  1699   000568  0A0F               	xorlw	15	; case 72
  1700   00056A  B4D8               	btfsc	status,2,c
  1701   00056C  EF64  F002         	goto	l409
  1702   000570  0A01               	xorlw	1	; case 73
  1703   000572  B4D8               	btfsc	status,2,c
  1704   000574  EF67  F002         	goto	l412
  1705   000578  0A03               	xorlw	3	; case 74
  1706   00057A  B4D8               	btfsc	status,2,c
  1707   00057C  EF6A  F002         	goto	l415
  1708   000580  0A01               	xorlw	1	; case 75
  1709   000582  B4D8               	btfsc	status,2,c
  1710   000584  EF6D  F002         	goto	l418
  1711   000588  EFC6  F002         	goto	l420
  1712   00058C                     l420:
  1713   00058C  0012               	return		;funcret
  1714   00058E                     __end_of_output_low:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _SYSTEM_Initialize *****************
  1718 ;; Defined at:
  1719 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 6
  1740 ;; This function calls:
  1741 ;;		_EUSART1_Initialize
  1742 ;;		_INTERRUPT_Initialize
  1743 ;;		_OSCILLATOR_Initialize
  1744 ;;		_PIN_MANAGER_Initialize
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text9
  1751   000A66                     __ptext9:
  1752                           	callstack 0
  1753   000A66                     _SYSTEM_Initialize:
  1754                           	callstack 24
  1755   000A66                     
  1756                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1757   000A66  EC64  F005         	call	_INTERRUPT_Initialize	;wreg free
  1758   000A6A                     
  1759                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1760   000A6A  EC12  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1761   000A6E                     
  1762                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1763   000A6E  EC3C  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1764   000A72                     
  1765                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1766   000A72  EC8B  F004         	call	_EUSART1_Initialize	;wreg free
  1767   000A76  0012               	return		;funcret
  1768   000A78                     __end_of_SYSTEM_Initialize:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _PIN_MANAGER_Initialize *****************
  1772 ;; Defined at:
  1773 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 4
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_SYSTEM_Initialize
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text10
  1802   000A24                     __ptext10:
  1803                           	callstack 0
  1804   000A24                     _PIN_MANAGER_Initialize:
  1805                           	callstack 25
  1806   000A24                     
  1807                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1808   000A24  0E00               	movlw	0
  1809   000A26  6E89               	movwf	137,c	;volatile
  1810                           
  1811                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1812   000A28  0E00               	movlw	0
  1813   000A2A  6E8A               	movwf	138,c	;volatile
  1814                           
  1815                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1816   000A2C  0E00               	movlw	0
  1817   000A2E  6E8B               	movwf	139,c	;volatile
  1818                           
  1819                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC0;
  1820   000A30  0EC0               	movlw	192
  1821   000A32  6E92               	movwf	146,c	;volatile
  1822   000A34                     
  1823                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1824   000A34  6893               	setf	147,c	;volatile
  1825                           
  1826                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x80;
  1827   000A36  0E80               	movlw	128
  1828   000A38  6E94               	movwf	148,c	;volatile
  1829                           
  1830                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  1831   000A3A  0E1F               	movlw	31
  1832   000A3C  010F               	movlb	15	; () banked
  1833   000A3E  6F5D               	movwf	93,b	;volatile
  1834                           
  1835                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x00;
  1836   000A40  0E00               	movlw	0
  1837   000A42  6F5C               	movwf	92,b	;volatile
  1838                           
  1839                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  1840   000A44  0E00               	movlw	0
  1841   000A46  6F5B               	movwf	91,b	;volatile
  1842   000A48                     
  1843                           ; BSR set to: 15
  1844                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  1845   000A48  8EF1               	bsf	241,7,c	;volatile
  1846   000A4A                     
  1847                           ; BSR set to: 15
  1848   000A4A  0012               	return		;funcret
  1849   000A4C                     __end_of_PIN_MANAGER_Initialize:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _OSCILLATOR_Initialize *****************
  1853 ;; Defined at:
  1854 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 4
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_SYSTEM_Initialize
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text11
  1883   000A78                     __ptext11:
  1884                           	callstack 0
  1885   000A78                     _OSCILLATOR_Initialize:
  1886                           	callstack 25
  1887   000A78                     
  1888                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x60;
  1889   000A78  0E60               	movlw	96
  1890   000A7A  6ED3               	movwf	211,c	;volatile
  1891                           
  1892                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x00;
  1893   000A7C  0E00               	movlw	0
  1894   000A7E  6ED2               	movwf	210,c	;volatile
  1895                           
  1896                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  1897   000A80  0E00               	movlw	0
  1898   000A82  6E9B               	movwf	155,c	;volatile
  1899                           
  1900                           ;mcc_generated_files/mcc.c: 68:     REFOCON = 0x00;
  1901   000A84  0E00               	movlw	0
  1902   000A86  6E9A               	movwf	154,c	;volatile
  1903   000A88  0012               	return		;funcret
  1904   000A8A                     __end_of_OSCILLATOR_Initialize:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _INTERRUPT_Initialize *****************
  1908 ;; Defined at:
  1909 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		None
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 4
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_SYSTEM_Initialize
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text12
  1938   000AC8                     __ptext12:
  1939                           	callstack 0
  1940   000AC8                     _INTERRUPT_Initialize:
  1941                           	callstack 25
  1942   000AC8                     
  1943                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1944   000AC8  9ED0               	bcf	208,7,c	;volatile
  1945   000ACA  0012               	return		;funcret
  1946   000ACC                     __end_of_INTERRUPT_Initialize:
  1947                           	callstack 0
  1948                           
  1949 ;; *************** function _EUSART1_Initialize *****************
  1950 ;; Defined at:
  1951 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 5
  1972 ;; This function calls:
  1973 ;;		_EUSART1_SetErrorHandler
  1974 ;;		_EUSART1_SetFramingErrorHandler
  1975 ;;		_EUSART1_SetOverrunErrorHandler
  1976 ;;		_EUSART1_SetRxInterruptHandler
  1977 ;;		_EUSART1_SetTxInterruptHandler
  1978 ;; This function is called by:
  1979 ;;		_SYSTEM_Initialize
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text13
  1984   000916                     __ptext13:
  1985                           	callstack 0
  1986   000916                     _EUSART1_Initialize:
  1987                           	callstack 24
  1988   000916                     
  1989                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  1990   000916  9A9D               	bcf	157,5,c	;volatile
  1991   000918                     
  1992                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1993   000918  0E8E               	movlw	low _EUSART1_Receive_ISR
  1994   00091A  6E25               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1995   00091C  0E05               	movlw	high _EUSART1_Receive_ISR
  1996   00091E  6E26               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1997   000920  EC4A  F005         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1998   000924                     
  1999                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  2000   000924  989D               	bcf	157,4,c	;volatile
  2001                           
  2002                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2003   000926  0E8A               	movlw	low _EUSART1_Transmit_ISR
  2004   000928  6E25               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2005   00092A  0E09               	movlw	high _EUSART1_Transmit_ISR
  2006   00092C  6E26               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2007   00092E  EC45  F005         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2008   000932                     
  2009                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  2010   000932  0E08               	movlw	8
  2011   000934  6EA7               	movwf	167,c	;volatile
  2012   000936                     
  2013                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  2014   000936  0E90               	movlw	144
  2015   000938  6EAB               	movwf	171,c	;volatile
  2016   00093A                     
  2017                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  2018   00093A  0E24               	movlw	36
  2019   00093C  6EAC               	movwf	172,c	;volatile
  2020   00093E                     
  2021                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x08;
  2022   00093E  0E08               	movlw	8
  2023   000940  6EAF               	movwf	175,c	;volatile
  2024   000942                     
  2025                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x02;
  2026   000942  0E02               	movlw	2
  2027   000944  6E7D               	movwf	125,c	;volatile
  2028   000946                     
  2029                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2030   000946  0ECC               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2031   000948  6E25               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2032   00094A  0E0A               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2033   00094C  6E26               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2034   00094E  EC54  F005         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2035   000952                     
  2036                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2037   000952  0EBC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2038   000954  6E25               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2039   000956  0E0A               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2040   000958  6E26               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2041   00095A  EC4F  F005         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2042   00095E                     
  2043                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2044   00095E  0EC2               	movlw	low _EUSART1_DefaultErrorHandler
  2045   000960  6E25               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2046   000962  0E0A               	movlw	high _EUSART1_DefaultErrorHandler
  2047   000964  6E26               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2048   000966  EC59  F005         	call	_EUSART1_SetErrorHandler	;wreg free
  2049                           
  2050                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2051   00096A  0E00               	movlw	0
  2052   00096C  6E1B               	movwf	_eusart1RxLastError^0,c	;volatile
  2053                           
  2054                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2055   00096E  0E00               	movlw	0
  2056   000970  6E20               	movwf	_eusart1TxHead^0,c	;volatile
  2057                           
  2058                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2059   000972  0E00               	movlw	0
  2060   000974  6E1F               	movwf	_eusart1TxTail^0,c	;volatile
  2061                           
  2062                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2063   000976  0E08               	movlw	8
  2064   000978  6E39               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  2065                           
  2066                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2067   00097A  0E00               	movlw	0
  2068   00097C  6E1E               	movwf	_eusart1RxHead^0,c	;volatile
  2069                           
  2070                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2071   00097E  0E00               	movlw	0
  2072   000980  6E1D               	movwf	_eusart1RxTail^0,c	;volatile
  2073                           
  2074                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2075   000982  0E00               	movlw	0
  2076   000984  6E1C               	movwf	_eusart1RxCount^0,c	;volatile
  2077   000986                     
  2078                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  2079   000986  8A9D               	bsf	157,5,c	;volatile
  2080   000988  0012               	return		;funcret
  2081   00098A                     __end_of_EUSART1_Initialize:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2085 ;; Defined at:
  2086 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2089 ;;		 -> EUSART1_Transmit_ISR(1), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;Total ram usage:        2 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 4
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_EUSART1_Initialize
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text14
  2116   000A8A                     __ptext14:
  2117                           	callstack 0
  2118   000A8A                     _EUSART1_SetTxInterruptHandler:
  2119                           	callstack 24
  2120   000A8A                     
  2121                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2122   000A8A  C025  F037         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2123   000A8E  C026  F038         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2124   000A92  0012               	return		;funcret
  2125   000A94                     __end_of_EUSART1_SetTxInterruptHandler:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2129 ;; Defined at:
  2130 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2133 ;;		 -> EUSART1_Receive_ISR(1), 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2149 ;;Total ram usage:        2 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 4
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_EUSART1_Initialize
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text15
  2160   000A94                     __ptext15:
  2161                           	callstack 0
  2162   000A94                     _EUSART1_SetRxInterruptHandler:
  2163                           	callstack 24
  2164   000A94                     
  2165                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2166   000A94  C025  F035         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2167   000A98  C026  F036         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2168   000A9C  0012               	return		;funcret
  2169   000A9E                     __end_of_EUSART1_SetRxInterruptHandler:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2173 ;; Defined at:
  2174 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2177 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;Total ram usage:        2 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 4
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_EUSART1_Initialize
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text16
  2204   000A9E                     __ptext16:
  2205                           	callstack 0
  2206   000A9E                     _EUSART1_SetOverrunErrorHandler:
  2207                           	callstack 24
  2208   000A9E                     
  2209                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  2210   000A9E  C025  F031         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2211   000AA2  C026  F032         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2212   000AA6  0012               	return		;funcret
  2213   000AA8                     __end_of_EUSART1_SetOverrunErrorHandler:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2217 ;; Defined at:
  2218 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2221 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;Total ram usage:        2 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 4
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_EUSART1_Initialize
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text17
  2248   000AA8                     __ptext17:
  2249                           	callstack 0
  2250   000AA8                     _EUSART1_SetFramingErrorHandler:
  2251                           	callstack 24
  2252   000AA8                     
  2253                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  2254   000AA8  C025  F033         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2255   000AAC  C026  F034         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2256   000AB0  0012               	return		;funcret
  2257   000AB2                     __end_of_EUSART1_SetFramingErrorHandler:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _EUSART1_SetErrorHandler *****************
  2261 ;; Defined at:
  2262 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2265 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2281 ;;Total ram usage:        2 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 4
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_EUSART1_Initialize
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text18
  2292   000AB2                     __ptext18:
  2293                           	callstack 0
  2294   000AB2                     _EUSART1_SetErrorHandler:
  2295                           	callstack 24
  2296   000AB2                     
  2297                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  2298   000AB2  C025  F02F         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2299   000AB6  C026  F030         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2300   000ABA  0012               	return		;funcret
  2301   000ABC                     __end_of_EUSART1_SetErrorHandler:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _INTERRUPT_InterruptManager *****************
  2305 ;; Defined at:
  2306 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2324 ;;Total ram usage:        4 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 3
  2327 ;; This function calls:
  2328 ;;		Absolute function
  2329 ;;		_EUSART1_Receive_ISR
  2330 ;;		_EUSART1_Transmit_ISR
  2331 ;; This function is called by:
  2332 ;;		Interrupt level 2
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	intcode
  2337   000008                     __pintcode:
  2338                           	callstack 0
  2339   000008                     _INTERRUPT_InterruptManager:
  2340                           	callstack 24
  2341                           
  2342                           ;incstack = 0
  2343   000008  823A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2344   00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  2345   00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2346   000012  CFD9 F023          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2347   000016  CFDA F024          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2348   00001A                     
  2349                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2350   00001A  ACF2               	btfss	242,6,c	;volatile
  2351   00001C  EF12  F000         	goto	i2u30_41
  2352   000020  EF14  F000         	goto	i2u30_40
  2353   000024                     i2u30_41:
  2354   000024  EF4E  F000         	goto	i2l226
  2355   000028                     i2u30_40:
  2356   000028                     
  2357                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2358   000028  A89D               	btfss	157,4,c	;volatile
  2359   00002A  EF19  F000         	goto	i2u31_41
  2360   00002E  EF1B  F000         	goto	i2u31_40
  2361   000032                     i2u31_41:
  2362   000032  EF31  F000         	goto	i2l221
  2363   000036                     i2u31_40:
  2364   000036  A89E               	btfss	158,4,c	;volatile
  2365   000038  EF20  F000         	goto	i2u32_41
  2366   00003C  EF22  F000         	goto	i2u32_40
  2367   000040                     i2u32_41:
  2368   000040  EF31  F000         	goto	i2l221
  2369   000044                     i2u32_40:
  2370   000044                     
  2371                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  2372   000044  D802               	call	i2u33_48
  2373   000046  EF2F  F000         	goto	i2u33_49
  2374   00004A                     i2u33_48:
  2375   00004A  0005               	push	
  2376   00004C  6EFA               	movwf	pclath,c
  2377   00004E  5037               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  2378   000050  6EFD               	movwf	tosl,c
  2379   000052  5038               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  2380   000054  6EFE               	movwf	tosh,c
  2381   000056  50F8               	movf	tblptru,w,c
  2382   000058  6EFF               	movwf	tosu,c
  2383   00005A  50FA               	movf	pclath,w,c
  2384   00005C  0012               	return		;indir
  2385   00005E                     i2u33_49:
  2386                           
  2387                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  2388   00005E  EF4E  F000         	goto	i2l226
  2389   000062                     i2l221:
  2390   000062  AA9D               	btfss	157,5,c	;volatile
  2391   000064  EF36  F000         	goto	i2u34_41
  2392   000068  EF38  F000         	goto	i2u34_40
  2393   00006C                     i2u34_41:
  2394   00006C  EF4E  F000         	goto	i2l222
  2395   000070                     i2u34_40:
  2396   000070  AA9E               	btfss	158,5,c	;volatile
  2397   000072  EF3D  F000         	goto	i2u35_41
  2398   000076  EF3F  F000         	goto	i2u35_40
  2399   00007A                     i2u35_41:
  2400   00007A  EF4E  F000         	goto	i2l222
  2401   00007E                     i2u35_40:
  2402   00007E                     
  2403                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  2404   00007E  D802               	call	i2u36_48
  2405   000080  EF4C  F000         	goto	i2u36_49
  2406   000084                     i2u36_48:
  2407   000084  0005               	push	
  2408   000086  6EFA               	movwf	pclath,c
  2409   000088  5035               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  2410   00008A  6EFD               	movwf	tosl,c
  2411   00008C  5036               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  2412   00008E  6EFE               	movwf	tosh,c
  2413   000090  50F8               	movf	tblptru,w,c
  2414   000092  6EFF               	movwf	tosu,c
  2415   000094  50FA               	movf	pclath,w,c
  2416   000096  0012               	return		;indir
  2417   000098                     i2u36_49:
  2418                           
  2419                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  2420   000098  EF4E  F000         	goto	i2l226
  2421   00009C                     i2l222:
  2422   00009C                     i2l226:
  2423   00009C  C024  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2424   0000A0  C023  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2425   0000A4  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2426   0000A8  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2427   0000AC  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2428   0000AE  0011               	retfie		f
  2429   0000B0                     __end_of_INTERRUPT_InterruptManager:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _EUSART1_Transmit_ISR *****************
  2433 ;; Defined at:
  2434 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_EUSART1_Initialize
  2458 ;;		_INTERRUPT_InterruptManager
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text20
  2463   00098A                     __ptext20:
  2464                           	callstack 0
  2465   00098A                     _EUSART1_Transmit_ISR:
  2466                           	callstack 26
  2467   00098A                     
  2468                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  2469   00098A  0E08               	movlw	8
  2470   00098C  6039               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  2471   00098E  EFCB  F004         	goto	i2u15_41
  2472   000992  EFCD  F004         	goto	i2u15_40
  2473   000996                     i2u15_41:
  2474   000996  EFE3  F004         	goto	i2l140
  2475   00099A                     i2u15_40:
  2476   00099A                     
  2477                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  2478   00099A  0E11               	movlw	low _eusart1TxBuffer
  2479   00099C  241F               	addwf	_eusart1TxTail^0,w,c	;volatile
  2480   00099E  6ED9               	movwf	fsr2l,c
  2481   0009A0  6ADA               	clrf	fsr2h,c
  2482   0009A2  0E00               	movlw	high _eusart1TxBuffer
  2483   0009A4  22DA               	addwfc	fsr2h,f,c
  2484   0009A6  50DF               	movf	indf2,w,c
  2485   0009A8  6EAD               	movwf	173,c	;volatile
  2486   0009AA  2A1F               	incf	_eusart1TxTail^0,f,c	;volatile
  2487   0009AC                     
  2488                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  2489   0009AC  0E07               	movlw	7
  2490   0009AE  641F               	cpfsgt	_eusart1TxTail^0,c	;volatile
  2491   0009B0  EFDC  F004         	goto	i2u16_41
  2492   0009B4  EFDE  F004         	goto	i2u16_40
  2493   0009B8                     i2u16_41:
  2494   0009B8  EFE0  F004         	goto	i2l1267
  2495   0009BC                     i2u16_40:
  2496   0009BC                     
  2497                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  2498   0009BC  0E00               	movlw	0
  2499   0009BE  6E1F               	movwf	_eusart1TxTail^0,c	;volatile
  2500   0009C0                     i2l1267:
  2501                           
  2502                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  2503   0009C0  2A39               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  2504                           
  2505                           ;mcc_generated_files/eusart1.c: 218:     }
  2506   0009C2  EFE4  F004         	goto	i2l143
  2507   0009C6                     i2l140:
  2508                           
  2509                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  2510   0009C6  989D               	bcf	157,4,c	;volatile
  2511   0009C8                     i2l143:
  2512   0009C8  0012               	return		;funcret
  2513   0009CA                     __end_of_EUSART1_Transmit_ISR:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _EUSART1_Receive_ISR *****************
  2517 ;; Defined at:
  2518 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;Total ram usage:        0 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 2
  2539 ;; This function calls:
  2540 ;;		Absolute function
  2541 ;;		_EUSART1_DefaultErrorHandler
  2542 ;;		_EUSART1_DefaultFramingErrorHandler
  2543 ;;		_EUSART1_DefaultOverrunErrorHandler
  2544 ;;		_EUSART1_RxDataHandler
  2545 ;; This function is called by:
  2546 ;;		_EUSART1_Initialize
  2547 ;;		_INTERRUPT_InterruptManager
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text21
  2552   00058E                     __ptext21:
  2553                           	callstack 0
  2554   00058E                     _EUSART1_Receive_ISR:
  2555                           	callstack 24
  2556   00058E                     
  2557                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  2558   00058E  0E01               	movlw	low _eusart1RxStatusBuffer
  2559   000590  241E               	addwf	_eusart1RxHead^0,w,c	;volatile
  2560   000592  6ED9               	movwf	fsr2l,c
  2561   000594  6ADA               	clrf	fsr2h,c
  2562   000596  0E00               	movlw	high _eusart1RxStatusBuffer
  2563   000598  22DA               	addwfc	fsr2h,f,c
  2564   00059A  0E00               	movlw	0
  2565   00059C  6EDF               	movwf	indf2,c
  2566   00059E                     
  2567                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  2568   00059E  A4AB               	btfss	171,2,c	;volatile
  2569   0005A0  EFD4  F002         	goto	i2u17_41
  2570   0005A4  EFD6  F002         	goto	i2u17_40
  2571   0005A8                     i2u17_41:
  2572   0005A8  EFEA  F002         	goto	i2l1277
  2573   0005AC                     i2u17_40:
  2574   0005AC                     
  2575                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  2576   0005AC  0E01               	movlw	low _eusart1RxStatusBuffer
  2577   0005AE  241E               	addwf	_eusart1RxHead^0,w,c	;volatile
  2578   0005B0  6ED9               	movwf	fsr2l,c
  2579   0005B2  6ADA               	clrf	fsr2h,c
  2580   0005B4  0E00               	movlw	high _eusart1RxStatusBuffer
  2581   0005B6  22DA               	addwfc	fsr2h,f,c
  2582   0005B8  82DF               	bsf	indf2,1,c
  2583   0005BA                     
  2584                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  2585   0005BA  D802               	call	i2u18_48
  2586   0005BC  EFEA  F002         	goto	i2u18_49
  2587   0005C0                     i2u18_48:
  2588   0005C0  0005               	push	
  2589   0005C2  6EFA               	movwf	pclath,c
  2590   0005C4  5033               	movf	_EUSART1_FramingErrorHandler^0,w,c
  2591   0005C6  6EFD               	movwf	tosl,c
  2592   0005C8  5034               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  2593   0005CA  6EFE               	movwf	tosh,c
  2594   0005CC  50F8               	movf	tblptru,w,c
  2595   0005CE  6EFF               	movwf	tosu,c
  2596   0005D0  50FA               	movf	pclath,w,c
  2597   0005D2  0012               	return		;indir
  2598   0005D4                     i2u18_49:
  2599   0005D4                     i2l1277:
  2600                           
  2601                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  2602   0005D4  A2AB               	btfss	171,1,c	;volatile
  2603   0005D6  EFEF  F002         	goto	i2u19_41
  2604   0005DA  EFF1  F002         	goto	i2u19_40
  2605   0005DE                     i2u19_41:
  2606   0005DE  EF05  F003         	goto	i2l1283
  2607   0005E2                     i2u19_40:
  2608   0005E2                     
  2609                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  2610   0005E2  0E01               	movlw	low _eusart1RxStatusBuffer
  2611   0005E4  241E               	addwf	_eusart1RxHead^0,w,c	;volatile
  2612   0005E6  6ED9               	movwf	fsr2l,c
  2613   0005E8  6ADA               	clrf	fsr2h,c
  2614   0005EA  0E00               	movlw	high _eusart1RxStatusBuffer
  2615   0005EC  22DA               	addwfc	fsr2h,f,c
  2616   0005EE  84DF               	bsf	indf2,2,c
  2617   0005F0                     
  2618                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  2619   0005F0  D802               	call	i2u20_48
  2620   0005F2  EF05  F003         	goto	i2u20_49
  2621   0005F6                     i2u20_48:
  2622   0005F6  0005               	push	
  2623   0005F8  6EFA               	movwf	pclath,c
  2624   0005FA  5031               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  2625   0005FC  6EFD               	movwf	tosl,c
  2626   0005FE  5032               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  2627   000600  6EFE               	movwf	tosh,c
  2628   000602  50F8               	movf	tblptru,w,c
  2629   000604  6EFF               	movwf	tosu,c
  2630   000606  50FA               	movf	pclath,w,c
  2631   000608  0012               	return		;indir
  2632   00060A                     i2u20_49:
  2633   00060A                     i2l1283:
  2634                           
  2635                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  2636   00060A  0E01               	movlw	low _eusart1RxStatusBuffer
  2637   00060C  241E               	addwf	_eusart1RxHead^0,w,c	;volatile
  2638   00060E  6ED9               	movwf	fsr2l,c
  2639   000610  6ADA               	clrf	fsr2h,c
  2640   000612  0E00               	movlw	high _eusart1RxStatusBuffer
  2641   000614  22DA               	addwfc	fsr2h,f,c
  2642   000616  50DF               	movf	indf2,w,c
  2643   000618  B4D8               	btfsc	status,2,c
  2644   00061A  EF11  F003         	goto	i2u21_41
  2645   00061E  EF13  F003         	goto	i2u21_40
  2646   000622                     i2u21_41:
  2647   000622  EF22  F003         	goto	i2l1287
  2648   000626                     i2u21_40:
  2649   000626                     
  2650                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  2651   000626  D802               	call	i2u22_48
  2652   000628  EF20  F003         	goto	i2u22_49
  2653   00062C                     i2u22_48:
  2654   00062C  0005               	push	
  2655   00062E  6EFA               	movwf	pclath,c
  2656   000630  502F               	movf	_EUSART1_ErrorHandler^0,w,c
  2657   000632  6EFD               	movwf	tosl,c
  2658   000634  5030               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  2659   000636  6EFE               	movwf	tosh,c
  2660   000638  50F8               	movf	tblptru,w,c
  2661   00063A  6EFF               	movwf	tosu,c
  2662   00063C  50FA               	movf	pclath,w,c
  2663   00063E  0012               	return		;indir
  2664   000640                     i2u22_49:
  2665                           
  2666                           ;mcc_generated_files/eusart1.c: 242:     } else {
  2667   000640  EF24  F003         	goto	i2l150
  2668   000644                     i2l1287:
  2669                           
  2670                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  2671   000644  ECFD  F004         	call	_EUSART1_RxDataHandler	;wreg free
  2672   000648                     i2l150:
  2673   000648  0012               	return		;funcret
  2674   00064A                     __end_of_EUSART1_Receive_ISR:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  2678 ;; Defined at:
  2679 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		None
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_EUSART1_Initialize
  2703 ;;		_EUSART1_Receive_ISR
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text22
  2708   000ABC                     __ptext22:
  2709                           	callstack 0
  2710   000ABC                     _EUSART1_DefaultOverrunErrorHandler:
  2711                           	callstack 25
  2712   000ABC                     
  2713                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  2714   000ABC  98AB               	bcf	171,4,c	;volatile
  2715                           
  2716                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  2717   000ABE  88AB               	bsf	171,4,c	;volatile
  2718   000AC0  0012               	return		;funcret
  2719   000AC2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  2723 ;; Defined at:
  2724 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		None
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_EUSART1_Initialize
  2748 ;;		_EUSART1_Receive_ISR
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text23
  2753   000ACC                     __ptext23:
  2754                           	callstack 0
  2755   000ACC                     _EUSART1_DefaultFramingErrorHandler:
  2756                           	callstack 25
  2757   000ACC  0012               	return		;funcret
  2758   000ACE                     __end_of_EUSART1_DefaultFramingErrorHandler:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  2762 ;; Defined at:
  2763 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 1
  2784 ;; This function calls:
  2785 ;;		_EUSART1_RxDataHandler
  2786 ;; This function is called by:
  2787 ;;		_EUSART1_Initialize
  2788 ;;		_EUSART1_Receive_ISR
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text24
  2793   000AC2                     __ptext24:
  2794                           	callstack 0
  2795   000AC2                     _EUSART1_DefaultErrorHandler:
  2796                           	callstack 24
  2797   000AC2                     
  2798                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  2799   000AC2  ECFD  F004         	call	_EUSART1_RxDataHandler	;wreg free
  2800   000AC6  0012               	return		;funcret
  2801   000AC8                     __end_of_EUSART1_DefaultErrorHandler:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _EUSART1_RxDataHandler *****************
  2805 ;; Defined at:
  2806 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_EUSART1_Receive_ISR
  2830 ;;		_EUSART1_DefaultErrorHandler
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text25
  2835   0009FA                     __ptext25:
  2836                           	callstack 0
  2837   0009FA                     _EUSART1_RxDataHandler:
  2838                           	callstack 25
  2839   0009FA                     
  2840                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2841   0009FA  0E09               	movlw	low _eusart1RxBuffer
  2842   0009FC  241E               	addwf	_eusart1RxHead^0,w,c	;volatile
  2843   0009FE  6ED9               	movwf	fsr2l,c
  2844   000A00  6ADA               	clrf	fsr2h,c
  2845   000A02  0E00               	movlw	high _eusart1RxBuffer
  2846   000A04  22DA               	addwfc	fsr2h,f,c
  2847   000A06  CFAE FFDF          	movff	4014,indf2	;volatile
  2848   000A0A  2A1E               	incf	_eusart1RxHead^0,f,c	;volatile
  2849   000A0C                     
  2850                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2851   000A0C  0E07               	movlw	7
  2852   000A0E  641E               	cpfsgt	_eusart1RxHead^0,c	;volatile
  2853   000A10  EF0C  F005         	goto	i2u1_41
  2854   000A14  EF0E  F005         	goto	i2u1_40
  2855   000A18                     i2u1_41:
  2856   000A18  EF10  F005         	goto	i2l1127
  2857   000A1C                     i2u1_40:
  2858   000A1C                     
  2859                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  2860   000A1C  0E00               	movlw	0
  2861   000A1E  6E1E               	movwf	_eusart1RxHead^0,c	;volatile
  2862   000A20                     i2l1127:
  2863                           
  2864                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  2865   000A20  2A1C               	incf	_eusart1RxCount^0,f,c	;volatile
  2866   000A22  0012               	return		;funcret
  2867   000A24                     __end_of_EUSART1_RxDataHandler:
  2868                           	callstack 0
  2869   000000                     
  2870                           	psect	text26
  2871   000000                     __ptext26:
  2872                           	callstack 0
  2873   000000                     
  2874                           	psect	rparam
  2875   000000                     
  2876                           	psect	temp
  2877   00003A                     btemp:
  2878                           	callstack 0
  2879   00003A                     	ds	1
  2880   000000                     int$flags	set	btemp
  2881   000000                     wtemp8	set	btemp+1
  2882   000000                     ttemp5	set	btemp+1
  2883   000000                     ttemp6	set	btemp+4
  2884   000000                     ttemp7	set	btemp+8
  2885                           
  2886                           	psect	idloc
  2887                           
  2888                           ;Config register IDLOC0 @ 0x200000
  2889                           ;	unspecified, using default values
  2890   200000                     	org	2097152
  2891   200000  FF                 	db	255
  2892                           
  2893                           ;Config register IDLOC1 @ 0x200001
  2894                           ;	unspecified, using default values
  2895   200001                     	org	2097153
  2896   200001  FF                 	db	255
  2897                           
  2898                           ;Config register IDLOC2 @ 0x200002
  2899                           ;	unspecified, using default values
  2900   200002                     	org	2097154
  2901   200002  FF                 	db	255
  2902                           
  2903                           ;Config register IDLOC3 @ 0x200003
  2904                           ;	unspecified, using default values
  2905   200003                     	org	2097155
  2906   200003  FF                 	db	255
  2907                           
  2908                           ;Config register IDLOC4 @ 0x200004
  2909                           ;	unspecified, using default values
  2910   200004                     	org	2097156
  2911   200004  FF                 	db	255
  2912                           
  2913                           ;Config register IDLOC5 @ 0x200005
  2914                           ;	unspecified, using default values
  2915   200005                     	org	2097157
  2916   200005  FF                 	db	255
  2917                           
  2918                           ;Config register IDLOC6 @ 0x200006
  2919                           ;	unspecified, using default values
  2920   200006                     	org	2097158
  2921   200006  FF                 	db	255
  2922                           
  2923                           ;Config register IDLOC7 @ 0x200007
  2924                           ;	unspecified, using default values
  2925   200007                     	org	2097159
  2926   200007  FF                 	db	255
  2927                           
  2928                           	psect	config
  2929                           
  2930                           ;Config register CONFIG1L @ 0x300000
  2931                           ;	VREG Sleep Enable bit
  2932                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  2933                           ;	LF-INTOSC Low-power Enable bit
  2934                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  2935                           ;	SOSC Power Selection and mode Configuration bits
  2936                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  2937                           ;	Extended Instruction Set
  2938                           ;	XINST = OFF, Disabled
  2939   300000                     	org	3145728
  2940   300000  15                 	db	21
  2941                           
  2942                           ;Config register CONFIG1H @ 0x300001
  2943                           ;	Oscillator
  2944                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  2945                           ;	PLL x4 Enable bit
  2946                           ;	PLLCFG = OFF, Disabled
  2947                           ;	Fail-Safe Clock Monitor
  2948                           ;	FCMEN = OFF, Disabled
  2949                           ;	Internal External Oscillator Switch Over Mode
  2950                           ;	IESO = OFF, Disabled
  2951   300001                     	org	3145729
  2952   300001  02                 	db	2
  2953                           
  2954                           ;Config register CONFIG2L @ 0x300002
  2955                           ;	Power Up Timer
  2956                           ;	PWRTEN = OFF, Disabled
  2957                           ;	Brown Out Detect
  2958                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  2959                           ;	Brown-out Reset Voltage bits
  2960                           ;	BORV = 3, 1.8V
  2961                           ;	BORMV Power level
  2962                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  2963   300002                     	org	3145730
  2964   300002  7F                 	db	127
  2965                           
  2966                           ;Config register CONFIG2H @ 0x300003
  2967                           ;	Watchdog Timer
  2968                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  2969                           ;	Watchdog Postscaler
  2970                           ;	WDTPS = 1048576, 1:1048576
  2971   300003                     	org	3145731
  2972   300003  7C                 	db	124
  2973                           
  2974                           ; Padding undefined space
  2975   300004                     	org	3145732
  2976   300004  FF                 	db	255
  2977                           
  2978                           ;Config register CONFIG3H @ 0x300005
  2979                           ;	ECAN Mux bit
  2980                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  2981                           ;	MSSP address masking
  2982                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  2983                           ;	Master Clear Enable
  2984                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  2985   300005                     	org	3145733
  2986   300005  89                 	db	137
  2987                           
  2988                           ;Config register CONFIG4L @ 0x300006
  2989                           ;	Stack Overflow Reset
  2990                           ;	STVREN = ON, Enabled
  2991                           ;	Boot Block Size
  2992                           ;	BBSIZ = BB2K, 2K word Boot Block size
  2993   300006                     	org	3145734
  2994   300006  91                 	db	145
  2995                           
  2996                           ; Padding undefined space
  2997   300007                     	org	3145735
  2998   300007  FF                 	db	255
  2999                           
  3000                           ;Config register CONFIG5L @ 0x300008
  3001                           ;	Code Protect 00800-01FFF
  3002                           ;	CP0 = OFF, Disabled
  3003                           ;	Code Protect 02000-03FFF
  3004                           ;	CP1 = OFF, Disabled
  3005                           ;	Code Protect 04000-05FFF
  3006                           ;	CP2 = OFF, Disabled
  3007                           ;	Code Protect 06000-07FFF
  3008                           ;	CP3 = OFF, Disabled
  3009   300008                     	org	3145736
  3010   300008  0F                 	db	15
  3011                           
  3012                           ;Config register CONFIG5H @ 0x300009
  3013                           ;	Code Protect Boot
  3014                           ;	CPB = OFF, Disabled
  3015                           ;	Data EE Read Protect
  3016                           ;	CPD = OFF, Disabled
  3017   300009                     	org	3145737
  3018   300009  C0                 	db	192
  3019                           
  3020                           ;Config register CONFIG6L @ 0x30000A
  3021                           ;	Table Write Protect 00800-01FFF
  3022                           ;	WRT0 = OFF, Disabled
  3023                           ;	Table Write Protect 02000-03FFF
  3024                           ;	WRT1 = OFF, Disabled
  3025                           ;	Table Write Protect 04000-05FFF
  3026                           ;	WRT2 = OFF, Disabled
  3027                           ;	Table Write Protect 06000-07FFF
  3028                           ;	WRT3 = OFF, Disabled
  3029   30000A                     	org	3145738
  3030   30000A  0F                 	db	15
  3031                           
  3032                           ;Config register CONFIG6H @ 0x30000B
  3033                           ;	Config. Write Protect
  3034                           ;	WRTC = OFF, Disabled
  3035                           ;	Table Write Protect Boot
  3036                           ;	WRTB = OFF, Disabled
  3037                           ;	Data EE Write Protect
  3038                           ;	WRTD = OFF, Disabled
  3039   30000B                     	org	3145739
  3040   30000B  E0                 	db	224
  3041                           
  3042                           ;Config register CONFIG7L @ 0x30000C
  3043                           ;	Table Read Protect 00800-01FFF
  3044                           ;	EBTR0 = OFF, Disabled
  3045                           ;	Table Read Protect 02000-03FFF
  3046                           ;	EBTR1 = OFF, Disabled
  3047                           ;	Table Read Protect 04000-05FFF
  3048                           ;	EBTR2 = OFF, Disabled
  3049                           ;	Table Read Protect 06000-07FFF
  3050                           ;	EBTR3 = OFF, Disabled
  3051   30000C                     	org	3145740
  3052   30000C  0F                 	db	15
  3053                           
  3054                           ;Config register CONFIG7H @ 0x30000D
  3055                           ;	Table Read Protect Boot
  3056                           ;	EBTRB = OFF, Disabled
  3057   30000D                     	org	3145741
  3058   30000D  40                 	db	64
  3059                           tosu	equ	0xFFF
  3060                           tosh	equ	0xFFE
  3061                           tosl	equ	0xFFD
  3062                           stkptr	equ	0xFFC
  3063                           pclatu	equ	0xFFB
  3064                           pclath	equ	0xFFA
  3065                           pcl	equ	0xFF9
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           prodh	equ	0xFF4
  3071                           prodl	equ	0xFF3
  3072                           indf0	equ	0xFEF
  3073                           postinc0	equ	0xFEE
  3074                           postdec0	equ	0xFED
  3075                           preinc0	equ	0xFEC
  3076                           plusw0	equ	0xFEB
  3077                           fsr0h	equ	0xFEA
  3078                           fsr0l	equ	0xFE9
  3079                           wreg	equ	0xFE8
  3080                           indf1	equ	0xFE7
  3081                           postinc1	equ	0xFE6
  3082                           postdec1	equ	0xFE5
  3083                           preinc1	equ	0xFE4
  3084                           plusw1	equ	0xFE3
  3085                           fsr1h	equ	0xFE2
  3086                           fsr1l	equ	0xFE1
  3087                           bsr	equ	0xFE0
  3088                           indf2	equ	0xFDF
  3089                           postinc2	equ	0xFDE
  3090                           postdec2	equ	0xFDD
  3091                           preinc2	equ	0xFDC
  3092                           plusw2	equ	0xFDB
  3093                           fsr2h	equ	0xFDA
  3094                           fsr2l	equ	0xFD9
  3095                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         32
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK11          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_avancer_250ms
    _avancer_250ms->_arret
    _avancer->_arret
    _avancer->_input
    _TGB->_arret
    _TGB->_input
    _TDB->_arret
    _TDB->_input
    _arret->_output_low
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22462
                                             12 COMRAM     2     2      0
                  _SYSTEM_Initialize
                                _TDB
                                _TGB
                              _arret
                            _avancer
                      _avancer_250ms
                              _input
 ---------------------------------------------------------------------------------
 (1) _avancer_250ms                                        2     2      0    4064
                                             10 COMRAM     2     2      0
                              _arret
                        _output_high
                         _output_low
 ---------------------------------------------------------------------------------
 (1) _avancer                                              0     0      0    5134
                              _arret
                              _input
                        _output_high
                         _output_low
 ---------------------------------------------------------------------------------
 (1) _TGB                                                  0     0      0    5134
                              _arret
                              _input
                        _output_high
                         _output_low
 ---------------------------------------------------------------------------------
 (1) _TDB                                                  0     0      0    5134
                              _arret
                              _input
                        _output_high
                         _output_low
 ---------------------------------------------------------------------------------
 (2) _output_high                                          4     2      2    1238
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _input                                                6     4      2    1116
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _arret                                                2     2      0    1390
                                              8 COMRAM     2     2      0
                         _output_low
 ---------------------------------------------------------------------------------
 (2) _output_low                                           4     2      2    1390
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _TDB
     _arret
       _output_low
     _input
     _output_high
     _output_low
   _TGB
     _arret
     _input
     _output_high
     _output_low
   _arret
   _avancer
     _arret
     _input
     _output_high
     _output_low
   _avancer_250ms
     _arret
     _output_high
     _output_low
   _input

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRll        11A      0       0      35        0.0%
BITBANK13          100      0       0      45        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      44        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      42        0.0%
BANK11             100      0       0      43        0.0%
BITBANK10          100      0       0      19        0.0%
BANK10             100      0       0      20        0.0%
BITBANK9           100      0       0      41        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      40        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      39        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      38        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      37        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      39       1       60.6%
BITBANK14           41      0       0      46        0.0%
BANK14              41      0       0      47        0.0%
BITBIGSFRhhlhhh     20      0       0      26        0.0%
BITBIGSFRlhl        1F      0       0      34        0.0%
BITBIGSFRhhlhhh     1D      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      23        0.0%
BITBIGSFRhhlhl       8      0       0      28        0.0%
BITBIGSFRlhhh        7      0       0      32        0.0%
BITBIGSFRhl          6      0       0      31        0.0%
BITBIGSFRhhlll       5      0       0      30        0.0%
BITBIGSFRlhhl        3      0       0      33        0.0%
BITBIGSFRhhlhhl      3      0       0      27        0.0%
BITBIGSFRhhlhhh      1      0       0      25        0.0%
BITBIGSFRhhllh       1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      36        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Apr 30 14:46:57 2023

                      _eusart1TxBufferRemaining 0039                                              l25 0A4A  
                                           l103 0988                                             l200 0A88  
                                           l215 0ACA                                             l311 035C  
                                           l400 04B6                                             l320 036E  
                                           l314 0362                                             l403 04BC  
                                           l323 0374                                             l307 0356  
                                           l251 0212                                             l172 0ABA  
                                           l412 04CE                                             l420 058C  
                                           l332 0386                                             l252 0252  
                                           l341 0398                                             l317 0368  
                                           l253 0292                                             l166 0AB0  
                                           l406 04C2                                             l350 03AA  
                                           l326 037A                                             l270 0834  
                                           l254 02D2                                             l175 0A92  
                                           l415 04D4                                             l335 038C  
                                           l344 039E                                             l169 0AA6  
                                           l409 04C8                                             l433 020C  
                                           l425 0204                                             l353 03B0  
                                           l329 0380                                             l361 046E  
                                           l178 0A9C                                             l418 04DA  
                                           l370 047A                                             l338 0392  
                                           l347 03A4                                             l291 07BC  
                                           l283 0702                                             l275 0874  
                                           l267 0914                                             l356 03B6  
                                           l197 0A76                                             l373 0480  
                                           l382 0492                                             l366 0474  
                                           l294 09F8                                             l286 077C  
                                           l278 06C2                                             l391 04A4  
                                           l359 03BC                                             l376 0486  
                                           l385 0498                                             l394 04AA  
                                           l379 048C                                             l388 049E  
                                           l397 04B0                                             u500 0142  
                                           u501 013A                                             u510 0160  
                                           u511 0158                                             u520 017E  
                                           u600 0910                                             u521 0176  
                                           u601 090C                                             u530 019C  
                                           u610 0230                                             _TDB 0704  
                                           u531 0194                                             u611 022C  
                                           u508 0144                                             u460 00CA  
                                           u540 0852                                             u620 024E  
                                           u461 00C2                                             u541 084E  
                                           u621 024A                                             u518 0162  
                                           u470 00E8                                             u550 0870  
                                           u630 0270                                             u471 00E0  
                                           u551 086C                                             u631 026C  
                                           u528 0180                                             u480 0106  
                                           u560 06E0                                             u640 028E  
                                           _TGB 064A                                             u481 00FE  
                                           u561 06DC                                             u641 028A  
                                           u538 019E                                             u490 0124  
                                           u570 06FE                                             u650 02B0  
                                           u491 011C                                             u571 06FA  
                                           u707 033E                                             u651 02AC  
                                           u468 00CC                                             u580 079A  
                                           u660 02CE                                             u581 0796  
                                           u717 08C8                                             u661 02CA  
                                           u478 00EA                                             u590 07B8  
                                           u670 02F0                                             u591 07B4  
                                           u727 08E8                                             u671 02EC  
                                           u488 0108                                             u680 030E  
                                           u737 080C                                             u681 030A  
                                           u498 0126                                             u690 0320  
                                           u747 082C                                             u691 031C  
                                           u757 0698                                             u767 06B8  
                                           u777 0752                                             u787 0772  
                                           u797 09EC                                 ??_avancer_250ms 002B  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            ?_TDB 0021  
                                          ?_TGB 0021                                            l1141 0A34  
                                          l1143 0A48                                            l1139 0A24  
                                          l1173 0AC8                                            l1511 0932  
                                          l1175 0A78                                            l1521 0946  
                                          l1513 0936                                            l1505 0916  
                                          l1601 06AA                                            l1523 0952  
                                          l1515 093A                                            l1507 0918  
                                          l1531 00B8                                            l1611 0738  
                                          l1603 06B6                                            l1525 095E  
                                          l1517 093E                                            l1509 0924  
                                          l1541 014E                                            l1533 00D6  
                                          l1621 079A                                            l1613 0750  
                                          l1605 06E0                                            l1527 0986  
                                          l1519 0942                                            l1543 016C  
                                          l1535 00F4                                            l1623 07B8  
                                          l1615 0758                                            l1607 06FE  
                                          l1545 018A                                            l1537 0112  
                                          l1529 00B4                                            l1617 0764  
                                          l1609 0704                                            l1641 08E6  
                                          l1633 08AE                                            l1625 0876  
                                          l1491 0A9E                                            l1571 0A6A  
                                          l1555 09CA                                            l1539 0130  
                                          l1563 03C2                                            l1619 0770  
                                          l1643 08F0                                            l1635 08C6  
                                          l1627 08A6                                            l1651 0230  
                                          l1493 0AB2                                            l1485 0A94  
                                          l1573 0A6E                                            l1557 09E2  
                                          l1549 01A8                                            l1581 080A  
                                          l1645 08F4                                            l1637 08CE  
                                          l1661 02CE                                            l1653 024E  
                                          l1487 0A8A                                            l1575 0A72  
                                          l1495 0470                                            l1735 03D8  
                                          l1559 0352                                            l1591 0870  
                                          l1583 0812                                            l1647 0910  
                                          l1639 08DA                                            l1671 0330  
                                          l1663 02F0                                            l1655 0270  
                                          l1489 0AA8                                            l1569 0A66  
                                          l1737 01BE                                            l1593 064A  
                                          l1585 081E                                            l1577 07BE  
                                          l1673 0334                                            l1665 030E  
                                          l1657 028E                                            l1649 020E  
                                          l1739 04F6                                            l1499 04E0  
                                          l1595 067E                                            l1587 082A  
                                          l1579 07F2                                            l1667 0320  
                                          l1659 02B0                                            l1597 0696  
                                          l1589 0852                                            l1669 0324  
                                          l1599 069E                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _WPUB 000F5B                                     _output_high 0352  
                                          _main 020E                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          btemp 003A                                            start 00B0  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                         ??_TDB 002B                                           ??_TGB 002B  
                 __end_of_OSCILLATOR_Initialize 0A8A                           _eusart1RxStatusBuffer 0001  
                                         ?_main 0021                                           i2l140 09C6  
                                         i2l221 0062                                           i2l150 0648  
                                         i2l222 009C                                           i2l143 09C8  
                                         i2l160 0AC0                                           i2l154 0A22  
                                         i2l226 009C                                           i2l163 0AC6  
                                         i2l157 0ACC                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                          _EUSART1_Transmit_ISR 098A                                 __end_of_avancer 0876  
                                         _arret 09CA                                           _input 00B4  
                                         main@x 0019                                           pclath 000FFA  
                                         pclatu 000FFB                                           ttemp5 003B  
                                         ttemp6 003E                                           ttemp7 0042  
                                         status 000FD8                                           wtemp8 003B  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 0ACE  
          ??_EUSART1_DefaultFramingErrorHandler 0021             ?_EUSART1_DefaultFramingErrorHandler 0021  
            _EUSART1_DefaultFramingErrorHandler 0ACC                                 __initialization 0A4C  
                    __end_of_EUSART1_Initialize 098A                                    __end_of_main 0352  
                   ?_INTERRUPT_InterruptManager 0021                                          ??_main 002D  
                                 __activetblptr 000002                           ?_EUSART1_Transmit_ISR 0021  
                                        ?_arret 0021                                          ?_input 0025  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                        i2l1121 0A0A                                          i2l1123 0A0C  
                                        i2l1125 0A1C                                          i2l1127 0A20  
                                        i2l1119 09FA                                          i2l1171 0AC2  
                                        i2l1261 09AA                                          i2l1271 059E  
                                        i2l1263 09AC                                          i2l1169 0ABC  
                                        i2l1281 05F0                                          i2l1273 05AC  
                                        i2l1265 09BC                                          i2l1257 098A  
                                        i2l1283 060A                                          i2l1275 05BA  
                                        i2l1267 09C0                                          i2l1259 099A  
                                        i2l1285 0626                                          i2l1277 05D4  
                                        i2l1269 058E                                          i2l1287 0644  
                                        i2l1279 05E2                                          i2l1391 0036  
                                        i2l1393 0044                                          i2l1395 0070  
                                        i2l1387 001A                                          i2l1397 007E  
                                        i2l1389 0028                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                          i2u1_40 0A1C  
                                        i2u1_41 0A18                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                        ?_EUSART1_SetErrorHandler 0025  
                                        clear_0 0A52                                          isa$std 000001  
              ??_EUSART1_SetOverrunErrorHandler 0027                 ?_EUSART1_SetOverrunErrorHandler 0025  
                                     ??_avancer 002B                                          tblptru 000FF8  
                               _eusart1RxBuffer 0009                                 _eusart1TxBuffer 0011  
                             _SYSTEM_Initialize 0A66                                      __accesstop 0060  
                       __end_of__initialization 0A58                              ?_SYSTEM_Initialize 0021  
                                 ___rparam_used 000001                   __end_of_EUSART1_RxDataHandler 0A24  
                                __pcstackCOMRAM 0021                             ??_SYSTEM_Initialize 0027  
                                 __end_of_arret 09FA                                   __end_of_input 020E  
                        ??_EUSART1_Transmit_ISR 0021                     __end_of_EUSART1_Receive_ISR 064A  
                                       ??_arret 0029                       __end_of_SYSTEM_Initialize 0A78  
                                       ??_input 0027                                   _eusart1RxHead 001E  
                                 _eusart1TxHead 0020                                   _eusart1RxTail 001D  
                                 _eusart1TxTail 001F               _EUSART1_TxDefaultInterruptHandler 0037  
               ??_EUSART1_SetRxInterruptHandler 0027                                    ?_output_high 0025  
                                    __pnvCOMRAM 002F                 __end_of_EUSART1_SetErrorHandler 0ABC  
                                output_high@pin 0025          __end_of_EUSART1_SetFramingErrorHandler 0AB2  
                _EUSART1_SetFramingErrorHandler 0AA8                    ?_EUSART1_DefaultErrorHandler 0021  
                                       _REFOCON 000F9A                           __end_of_avancer_250ms 0916  
                                       _OSCCON2 000FD2                                         i2u21_40 0626  
                                       i2u20_48 05F6                                         i2u21_41 0622  
                                       i2u20_49 060A                                         i2u30_40 0028  
                                       i2u30_41 0024                                         i2u22_48 062C  
                                       i2u15_40 099A                                         i2u31_40 0036  
                                       i2u22_49 0640                                         i2u15_41 0996  
                                       i2u31_41 0032                                         i2u16_40 09BC  
                                       i2u32_40 0044                                         i2u16_41 09B8  
                                       i2u32_41 0040                                         i2u17_40 05AC  
                                       i2u17_41 05A8                                         i2u34_40 0070  
                                       i2u33_48 004A                                         i2u34_41 006C  
                                       i2u33_49 005E                                         i2u19_40 05E2  
                                       i2u18_48 05C0                                         i2u35_40 007E  
                                       i2u19_41 05DE                                         i2u18_49 05D4  
                                       i2u35_41 007A                                         i2u36_48 0084  
                                       i2u36_49 0098                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7D                                         __Hparam 0000  
                                       __Lparam 0000                                         __pcinit 0A4C  
                                       __ramtop 1000                                         __ptext0 020E  
                                       __ptext1 0876                                         __ptext2 07BE  
                                       __ptext3 064A                                         __ptext4 0704  
                                       __ptext5 0352                                         __ptext6 00B4  
                                       __ptext7 09CA                                         __ptext8 0470  
                                       __ptext9 0A66                                         _avancer 07BE  
                         _OSCILLATOR_Initialize 0A78                              _EUSART1_Initialize 0916  
                      ??_PIN_MANAGER_Initialize 0025                   ??_EUSART1_DefaultErrorHandler 0021  
                          end_of_initialization 0A58                             ?_EUSART1_Initialize 0021  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0031  
         __end_of_EUSART1_SetRxInterruptHandler 0A9E                   _EUSART1_SetRxInterruptHandler 0A94  
                                       postinc0 000FEE                            ??_EUSART1_Initialize 0027  
                                     _PORTBbits 000F81                         fp__EUSART1_Transmit_ISR 0000  
                                    _output_low 0470                    __end_of_INTERRUPT_Initialize 0ACC  
                        ?_OSCILLATOR_Initialize 0021                             start_initialization 0A4C  
                                   __end_of_TDB 07BE                                     __end_of_TGB 0704  
 EUSART1_SetRxInterruptHandler@interruptHandler 0025   EUSART1_SetTxInterruptHandler@interruptHandler 0025  
                        fp__EUSART1_Receive_ISR 0000                           _EUSART1_RxDataHandler 09FA  
                ?_EUSART1_SetRxInterruptHandler 0025                                  _eusart1RxCount 001C  
                                   __pbssCOMRAM 0001               _EUSART1_RxDefaultInterruptHandler 0035  
                                    input@value 0029                 ??_EUSART1_SetTxInterruptHandler 0027  
              ??_EUSART1_SetFramingErrorHandler 0027                 ?_EUSART1_SetFramingErrorHandler 0025  
                                   ?_output_low 0025                          _PIN_MANAGER_Initialize 0A24  
                                     __pintcode 0008                    ??_INTERRUPT_InterruptManager 0021  
                                      ?_avancer 0021                                   output_low@pin 0025  
                                      _BAUDCON1 000FA7           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0AC2            ??_EUSART1_DefaultOverrunErrorHandler 0021  
           ?_EUSART1_DefaultOverrunErrorHandler 0021              _EUSART1_DefaultOverrunErrorHandler 0ABC  
                          _EUSART1_ErrorHandler 002F                         _EUSART1_SetErrorHandler 0AB2  
                          _INTERRUPT_Initialize 0AC8                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 0025                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                                        _PIE1bits 000F9D  
                                      _PIR1bits 000F9E                          ?_EUSART1_RxDataHandler 0021  
                                      _RCONbits 000FD0                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0021           __end_of_EUSART1_SetTxInterruptHandler 0A94  
                 _EUSART1_SetTxInterruptHandler 0A8A                                        __Hrparam 0000  
                                      __Lrparam 0000                         ??_OSCILLATOR_Initialize 0025  
                     ??_EUSART1_SetErrorHandler 0027             __end_of_EUSART1_DefaultErrorHandler 0AC8  
                   _EUSART1_DefaultErrorHandler 0AC2                                   _avancer_250ms 0876  
                                      __ptext10 0A24                                        __ptext11 0A78  
                                      __ptext20 098A                                        __ptext12 0AC8  
                                      __ptext21 058E                                        __ptext13 0916  
                                      __ptext22 0ABC                                        __ptext14 0A8A  
                                      __ptext23 0ACC                                        __ptext15 0A94  
                                      __ptext24 0AC2                                        __ptext16 0A9E  
                                      __ptext25 09FA                                        __ptext17 0AA8  
                                      __ptext26 0000                                        __ptext18 0AB2  
                                 ??_output_high 0027  EUSART1_SetOverrunErrorHandler@interruptHandler 0025  
                                      isa$xinst 000000                                        int$flags 003A  
            __end_of_INTERRUPT_InterruptManager 00B0                      _INTERRUPT_InterruptManager 0008  
                                avancer_250ms@i 002B                     _EUSART1_FramingErrorHandler 0033  
                           _EUSART1_Receive_ISR 058E                                      _INTCONbits 000FF2  
                                ?_avancer_250ms 0021                          ??_INTERRUPT_Initialize 0025  
                                      input@pin 0025                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0021                         ?_PIN_MANAGER_Initialize 0021  
        __end_of_EUSART1_SetOverrunErrorHandler 0AA8                  _EUSART1_SetOverrunErrorHandler 0A9E  
                                    _RCSTA1bits 000FAB                                    ??_output_low 0027  
                  __end_of_EUSART1_Transmit_ISR 09CA                             __end_of_output_high 0470  
EUSART1_SetFramingErrorHandler@interruptHandler 0025                  ?_EUSART1_SetTxInterruptHandler 0025  
                            _eusart1RxLastError 001B                              __end_of_output_low 058E  
                         ??_EUSART1_Receive_ISR 0021                  __end_of_PIN_MANAGER_Initialize 0A4C  
                       ??_EUSART1_RxDataHandler 0021  
